# Prefix Signatures
#
# Regular expressions matching frame signatures that should always be coupled
# with the following frame signature when generating an overall signature.

@0x0
.*CrashAtUnhandlableOOM
Abort
.*abort
.*alloc_impl
alloc::oom::default_oom_handler
alloc::oom::oom
_alloca_probe.*
__android_log_assert
arena_.*
BaseGetNamedObjectDirectory
.*calloc
cert_.*
CERT_.*
CFRelease
_chkstk
CleanupPerAppKey
ConditionVariableFallback::wait\(.*\)
core::option::expect_failed
core::result::unwrap_failed<T>
core::str::slice_error_fail
CrashInJS
CreateFileMappingA
__delayLoadHelper2
dlmalloc
dlmalloc_trim
dvm.*
EtwEventEnabled
extent_.*
fastcopy_I
fastzero_I
_files_getaddrinfo
.*free
free_impl
GCGraphBuilder::NoteXPCOMChild
gfxPlatform::Init
getanswer
HandleInvalidParameter
HeapFree
huge_dalloc
huge_palloc
ialloc
imalloc
init_library
InvalidArrayIndex_CRASH
invalid_parameter_noinfo
_invalid_parameter_noinfo
isalloc
jemalloc_crash
je_.*
JNI_CreateJavaVM
_JNIEnv.*
JNI_GetCreatedJavaVM.*
js::AutoCompartment::AutoCompartment.*
js::AutoEnterOOMUnsafeRegion::crash
js::detail::HashTable<.*>::.*
js::HashSet<.*>::.*
js::HashMap<.*>::.*
js::LifoAlloc::getOrCreateChunk
JSAutoCompartment::JSAutoCompartment.*
JS_DHashTableEnumerate
JS_DHashTableOperate
JS_NewStringCopyZ.*
kill
__libc_android_abort
libobjc.A.dylib@0x1568.
(libxul\.so|xul\.dll|XUL)@0x.*
LL_.*
malloc
_MD_.*
memcmp
__memcmp16
memcpy
memmove
_platform_memmove\$VARIANT\$Haswell
memset
mozalloc_abort.*
mozalloc_handle_oom
moz_free
mozilla::AndroidBridge::AutoLocalJNIFrame::~AutoLocalJNIFrame
mozilla::CondVar::.*
mozilla::detail::ConditionVariableImpl::.*
SleepConditionVariableCS
SleepConditionVariableSRW
mozilla::TimeStamp::Now
GetTickCount64
mozilla::detail::MutexImpl::.*
mozilla::detail::nsStringRepr::First
mozilla::detail::nsStringRepr::Last
mozilla::ipc::LogicError
mozilla::ipc::MessageChannel::AssertWorkerThread
mozilla::ipc::MessageChannel::Call
mozilla::ipc::MessageChannel::Clear
mozilla::ipc::MessageChannel::CxxStackFrame::CxxStackFrame
mozilla::ipc::MessageChannel::~MessageChannel
mozilla::ipc::MessageChannel::Send
mozilla::ipc::RPCChannel::Call
mozilla::ipc::RPCChannel::CxxStackFrame::CxxStackFrame
mozilla::ipc::RPCChannel::EnteredCxxStack
mozilla::ipc::RPCChannel::Send
mozilla::layers::CompositorD3D11::Failed
mozilla::layers::CompositorD3D11::HandleError
mozilla::WrapNotNull<.*
mozilla.*FatalError
moz_xmalloc
moz_xrealloc
MOZ_CrashOOL
MOZ_CrashPrintf
msvcr120\.dll@0x.*
\<name omitted\>
NP_Shutdown
(NS_)?(Lossy)?(Copy|Append|Convert).*UTF.*
nsACString_internal::Assign.*
nsAString_internal::Assign.*
nsACString_internal::BeginWriting
nsAString_internal::BeginWriting
nsACString_internal::SetCapacity
nsTArrayInfallibleAllocator
NS_strcmp
nsBaseHashtable<.*>::.*
nsClassHashtable<.*>::.*
nsCOMPtr.*
NS_ABORT_OOM.*
nsDataHashtable<.*>::.*
NS_DebugBreak.*
nsDebugImpl::Abort
nsDependentString::nsDependentString
nsEventQueue::GetEvent
nsThread::GetEvent
nsThread::nsChainedEventQueue::GetEvent
mozilla::SpinEventLoopUntil<T>
[-+]\[NSException raise(:format:(arguments:)?)?\]
nsInterfaceHashtable<.*>::.*
nsINode::Slots
nsJSThingHashtable<.*>::.*
nsObjCExceptionLogAbort
nsRefPtr.*
NSS.*
nss.*
nsStringBuffer::FromDataCanaryCheckFailed
nsTArray<.*
nsTArray_base<.*
nsTArray_Impl<.*
nsTHashtable<.*>::.*
nsThread::Shutdown
NtUser.*
objc_exception_throw
objc_msgSend
operator new
<.*>::operator()
PLDHashTable::.*
PL_.*
port_.*
PORT_.*
_PR_.*
PR_.*
.*ProcessNextEvent.*
__psynch_cvwait
_pthread_cond_wait
pthread_mutex_lock
__pthread_kill
_purecall
raise
realloc
recv
.*ReentrantMonitor::Wait.*
RefPtr.*
_RTC_Terminate
Rtl.*
_Rtl.*
__Rtl.*
__rust_start_panic
SEC_.*Item
seckey_.*
SECKEY_.*
__security_check_cookie
send
setjmp
sigblock
sigprocmask
SocketAccept
SocketAcceptRead
SocketAvailable
SocketAvailable64
SocketBind
SocketClose
SocketConnect
SocketGetName
SocketGetPeerName
SocketListen
SocketPoll
SocketRead
SocketRecv
SocketSend
SocketShutdown
SocketSync
SocketTransmitFile
SocketWrite
SocketWritev
ssl_.*
SSL_.*
std::_Allocate.*
std::_Hash<T>::.*
std::list<.*>::.*
std::panicking::begin_panic<.*>
std::panicking::rust_panic_with_hook
std::collections::hash::map::.*
stdext::hash_map<T>::.*
strcat
strncmp
ssl3_.*
strchr
strcmp
strcpy
.*strdup
StringBeginsWith
StringEndsWith
strlen
strncpy
strzcmp16
strstr
__swrite
TlsGetValue
TouchBadMemory
vcruntime140\.dll@0x.*
_VEC_memcpy
_VEC_memzero
.*WaitFor.*
wcslen
__wrap_realloc
WSARecv.*
WSASend.*
_ZdaPvRKSt9nothrow_t"
zzz_AsmCodeRange_.*
.*DebugAbort.*
mozilla::ipc::MessageChannel::~MessageChannel.*
mozilla::MakeUnique<.*>

# List of DLLs to add. At some point, should be replaced by one generic rule
# for all DLLs.

aticfx32\.dll
aticfx64\.dll
atidxx32\.dll
atidxx64\.dll
atiu9pag\.dll
atiu9p64\.dll
atiumd6a\.dll
atiumdag\.dll
atiumdva\.dll
atiuxpag\.dll
igd10iumd32\.dll
igd10iumd64\.dll
igd10umd32\.dll
igd10umd64\.dll
igdumd32\.dll
igdumd64\.dll
igdumdim32\.dll
igdumdim64\.dll
igd11dxva32\.dll
igd11dxva64\.dll
igdusc32\.dll
igdusc64\.dll
nvd3dum\.dll
nvd3dumx\.dll
nvoglnt\.dll
nvumdshim\.dll
nvumdshimx\.dll
nvwgf2um\.dll
nvwgf2umx\.dll
nvapi\.dll
nvapi64\.dll
nvscpapi\.dll
nvoglv32\.dll
nvoglv64\.dll
