# name: application
# doc: the fully qualified module or class of the application
# converter: configman.converters.class_converter
application='CrashMoverApp'

[destination]

    # name: crashstorage_class
    # doc: the destination storage class
    # converter: configman.converters.class_converter
    crashstorage_class='socorro.external.crashstorage_base.PolyCrashStorage'

    # name: storage_classes
    # doc: a comma delimited list of storage classes
    # converter: configman.converters.class_list_converter
    storage_classes='socorro.external.hb.crashstorage.HBaseCrashStorage, socorro.external.rabbitmq.crashstorage.RabbitMQCrashStorage'

    [[storage0]]

        # name: crashstorage_class
        # doc: None
        # converter: configman.converters.class_converter
        crashstorage_class='socorro.external.hb.crashstorage.HBaseCrashStorage'

        # name: dump_file_suffix
        # doc: the suffix used to identify a dump file (for use in temp files)
        # converter: str
        dump_file_suffix='.dump'

        # name: forbidden_keys
        # doc: a comma delimited list of keys banned from the processed crash in HBase
        # converter: socorro.external.hb.connection_context.<lambda>
        forbidden_keys='email, url, user_id, exploitability'

        # name: hbase_connection_context_class
        # doc: the class responsible for proving an hbase connection
        # converter: configman.converters.class_converter
        hbase_connection_context_class='socorro.external.hb.connection_context.HBaseConnectionContext'

        # name: hbase_host
        # doc: Host to HBase server
        # converter: str
        hbase_host='localhost'

        # name: hbase_port
        # doc: Port to HBase server
        # converter: int
        hbase_port='9090'

        # name: hbase_timeout
        # doc: timeout in milliseconds for an HBase connection
        # converter: int
        hbase_timeout='5000'

        # name: new_crash_limit
        # doc: the maximum number of new crashes to yield at a time
        # converter: int
        new_crash_limit='1000000'

        # name: temporary_file_system_storage_path
        # doc: a local filesystem path where dumps temporarily during processing
        # converter: str
        temporary_file_system_storage_path='/tmp'

        # name: transaction_executor_class
        # doc: a class that will execute transactions
        # converter: configman.converters.class_converter
        transaction_executor_class='socorro.database.transaction_executor.TransactionExecutor'

    [[storage1]]

        # name: backoff_delays
        # doc: delays in seconds between retries
        # converter: eval
        backoff_delays="10, 30, 60, 120, 300"

        # name: crashstorage_class
        # doc: None
        # converter: configman.converters.class_converter
        crashstorage_class='socorro.external.rabbitmq.crashstorage.RabbitMQCrashStorage'

        # name: host
        # doc: the hostname of the RabbitMQ server
        # converter: str
        host='localhost'

        # name: port
        # doc: the port for the RabbitMQ server
        # converter: int
        port='5672'

        # name: rabbitmq_class
        # doc: the class responsible for connecting toRabbitMQ
        # converter: configman.converters.class_converter
        rabbitmq_class='socorro.external.rabbitmq.connection_context.ConnectionContext'

        # name: rabbitmq_password
        # doc: the user's RabbitMQ password
        # converter: str
        rabbitmq_password='guest'

        # name: rabbitmq_user
        # doc: the name of the user within the RabbitMQ instance
        # converter: str
        rabbitmq_user='guest'

        # name: transaction_executor_class
        # doc: Transaction wrapper class
        # converter: configman.converters.class_converter
        transaction_executor_class='socorro.database.transaction_executor.TransactionExecutorWithInfiniteBackoff'

        # name: virtual_host
        # doc: the name of the RabbitMQ virtual host
        # converter: str
        virtual_host='/'

        # name: wait_log_interval
        # doc: seconds between log during retries
        # converter: int
        wait_log_interval='1'

[logging]

    # name: stderr_error_logging_level
    # doc: logging level for the logging to stderr (10 - DEBUG, 20 - INFO, 30 - WARNING, 40 - ERROR, 50 - CRITICAL)
    # converter: int
    stderr_error_logging_level='10'

    # name: stderr_line_format_string
    # doc: python logging system format for logging to stderr
    # converter: str
    stderr_line_format_string='{asctime} {levelname} - {threadName} - {message}'

    # name: syslog_error_logging_level
    # doc: logging level for the log file (10 - DEBUG, 20 - INFO, 30 - WARNING, 40 - ERROR, 50 - CRITICAL)
    # converter: int
    syslog_error_logging_level='40'

    # name: syslog_facility_string
    # doc: syslog facility string ("user", "local0", etc)
    # converter: str
    syslog_facility_string='user'

    # name: syslog_host
    # doc: syslog hostname
    # converter: str
    syslog_host='localhost'

    # name: syslog_line_format_string
    # doc: python logging system format for syslog entries
    # converter: str
    syslog_line_format_string='crashmover (pid {process}): {asctime} {levelname} - {threadName} - {message}'

    # name: syslog_port
    # doc: syslog port
    # converter: int
    syslog_port='514'

[producer_consumer]

    # name: idle_delay
    # doc: the delay in seconds if no job is found
    # converter: int
    idle_delay='7'

    # name: maximum_queue_size
    # doc: the maximum size of the internal queue
    # converter: int
    maximum_queue_size='8'

    # name: number_of_threads
    # doc: the number of threads
    # converter: int
    number_of_threads='4'

    # name: producer_consumer_class
    # doc: the class implements a threaded producer consumer queue
    # converter: configman.converters.class_converter
    producer_consumer_class='socorro.lib.threaded_task_manager.ThreadedTaskManager'

[source]

    # name: crashstorage_class
    # doc: the source storage class
    # converter: configman.converters.class_converter
    crashstorage_class='socorro.external.filesystem.crashstorage.FileSystemRawCrashStorage'

    # name: dir_permissions
    # doc: a number used for permissions for directories in the local file system
    # converter: int
    dir_permissions='504'

    # name: dump_dir_count
    # doc: the number of dumps to be stored in a single directory in the local file system
    # converter: int
    dump_dir_count='1024'

    # name: dump_file_suffix
    # doc: the suffix used to identify a dump file
    # converter: str
    dump_file_suffix='.dump'

    # name: dump_gid
    # doc: the group ID for saved crashes in local file system (optional)
    # converter: str
    dump_gid=''

    # name: dump_permissions
    # doc: a number used for permissions crash dump files in the local file system
    # converter: int
    dump_permissions='432'

    # name: json_file_suffix
    # doc: the suffix used to identify a json file
    # converter: str
    json_file_suffix='.json'

    # name: std_fs_root
    # doc: a path to a local file system
    # converter: str
    std_fs_root='./primaryCrashStore'

