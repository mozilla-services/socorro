# name: application
# doc: the fully qualified module or class of the application
# converter: configman.converters.class_converter
application='ProcessorApp'

[destination]

    # name: crashstorage_class
    # doc: the destination storage class
    # converter: configman.converters.class_converter
    crashstorage_class='socorro.external.crashstorage_base.PolyCrashStorage'

    # name: storage_classes
    # doc: a comma delimited list of storage classes
    # converter: configman.converters.class_list_converter
    storage_classes='socorro.external.hbase.crashstorage.HBaseCrashStorage, socorro.external.postgresql.crashstorage.PostgreSQLCrashStorage, socorro.external.elasticsearch.crashstorage.ElasticSearchCrashStorage'

    [[storage0]]

        # name: crashstorage_class
        # doc: None
        # converter: configman.converters.class_converter
        crashstorage_class='socorro.external.postgresql.crashstorage.PostgreSQLCrashStorage'

        # name: database_class
        # doc: the class responsible for connecting toPostgres
        # converter: configman.converters.class_converter
        database_class='socorro.external.postgresql.connection_context.ConnectionContext'

        +include /etc/socorro/processor_postgres.ini

        # name: transaction_executor_class
        # doc: a class that will manage transactions
        # converter: configman.converters.class_converter
        transaction_executor_class='socorro.database.transaction_executor.TransactionExecutorWithLimitedBackoff'

        # name: wait_log_interval
        # doc: seconds between log during retries
        # converter: int
        wait_log_interval='30'

        # name: backoff_delays
        # doc: delays in seconds between retries
        # converter: eval
        backoff_delays='10, 30, 60, 120, 120, 120, 120, 120'

    [[storage1]]

        # name: crashstorage_class
        # doc: None
        # converter: configman.converters.class_converter
        crashstorage_class='socorro.external.hbase.crashstorage.HBaseCrashStorage'

        # name: forbidden_keys
        # doc: a comma delimited list of keys banned from the processed crash in HBase
        # converter: socorro.external.hbase.crashstorage.<lambda>
        forbidden_keys='email, url, user_id'

        +include /etc/socorro/hbase.ini

        # name: transaction_executor_class
        # doc: a class that will manage transactions
        # converter: configman.converters.class_converter
        transaction_executor_class='socorro.database.transaction_executor.TransactionExecutorWithLimitedBackoff'

        # name: wait_log_interval
        # doc: seconds between log during retries
        # converter: int
        wait_log_interval='30'

        # name: backoff_delays
        # doc: delays in seconds between retries
        # converter: eval
        backoff_delays='10, 30, 60, 120, 120, 120, 120, 120'

    [[storage2]]

        # name: crashstorage_class
        # doc: None
        # converter: configman.converters.class_converter
        crashstorage_class='socorro.external.elasticsearch.crashstorage.ElasticSearchCrashStorage'

        # name: submission_url
        # doc: a url to submit crash_ids for Elastic Search (use %s in place of the crash_id) (leave blank to disable)
        # converter: str
        submission_url=''

        # name: timeout
        # doc: how long to wait in seconds for confirmation of a submission
        # converter: int
        timeout='2'

        # name: transaction_executor_class
        # doc: a class that will manage transactions
        # converter: configman.converters.class_converter
        transaction_executor_class='socorro.database.transaction_executor.TransactionExecutor'

[logging]

    # common logging configuration
    +include /etc/socorro/logging.ini

    # name: stderr_error_logging_level
    # doc: logging level for the logging to stderr (10 - DEBUG, 20 - INFO, 30 - WARNING, 40 - ERROR, 50 - CRITICAL)
    # converter: int
    stderr_error_logging_level='10'

    # name: syslog_error_logging_level
    # doc: logging level for the log file (10 - DEBUG, 20 - INFO, 30 - WARNING, 40 - ERROR, 50 - CRITICAL)
    # converter: int
    syslog_error_logging_level='40'


[new_crash_source]

    # name: batchJobLimit
    # doc: the number of jobs to pull in a time
    # converter: int
    batchJobLimit='10000'

    # name: database_class
    # doc: the class of the database
    # converter: configman.converters.class_converter
    database_class='socorro.external.postgresql.connection_context.ConnectionContext'

    +include /etc/socorro/processor_postgres.ini

    # name: new_crash_source_class
    # doc: an iterable that will stream crash_ids needing processing
    # converter: configman.converters.class_converter
    new_crash_source_class='socorro.processor.legacy_new_crash_source.LegacyNewCrashSource'

    # name: transaction_executor_class
    # doc: a class that will manage transactions
    # converter: configman.converters.class_converter
    transaction_executor_class='socorro.database.transaction_executor.TransactionExecutorWithLimitedBackoff'

    # name: wait_log_interval
    # doc: seconds between log during retries
    # converter: int
    wait_log_interval='30'

    # name: backoff_delays
    # doc: delays in seconds between retries
    # converter: eval
    backoff_delays='10, 30, 60, 120, 120, 120, 120, 120'

[processor]

    # name: collect_addon
    # doc: boolean indictating if information about add-ons should be collected
    # converter: configman.converters.boolean_converter
    collect_addon='True'

    # name: collect_crash_process
    # doc: boolean indictating if information about process type should be collected
    # converter: configman.converters.boolean_converter
    collect_crash_process='True'

    # name: crashing_thread_frame_threshold
    # doc: the number of frames to keep in the raw dump for the crashing thread
    # converter: int
    crashing_thread_frame_threshold='100'

    # name: crashing_thread_tail_frame_threshold
    # doc: the number of frames to keep in the raw dump at the tail of the frame list
    # converter: int
    crashing_thread_tail_frame_threshold='10'

    # name: database_class
    # doc: the class of the database
    # converter: configman.converters.class_converter
    database_class='socorro.external.postgresql.connection_context.ConnectionContext'

    +include processor_postgres.ini

    # name: known_flash_identifiers
    # doc: A subset of the known "debug identifiers" for flash versions, associated to the version
    # converter: json.loads
    known_flash_identifiers='{"937DDCC422411E58EF6AD13710B0EF190": "10.0.23", "7224164B5918E29AF52365AF3EAF7A500": "10.1.51.66", "03D99C42D7475B46D77E64D4D5386D6D0": "9.0.115.0", "0B03252A5C303973E320CAA6127441F80": "9.0.260.0", "77CB5AC61C456B965D0B41361B3F6CEA0": "10.0.22.87", "986682965B43DFA62E0A0DFFD7B7417F0": "10.0.23", "D1AAAB5D417861E6A5B835B01D3039550": "10.0.45.2", "974873A0A6AD482F8F17A7C55F0A33390": "9.0.262.0", "F43004FFC4944F26AF228334F2CDA80B0": "9.0.151.0", "BF6B3B51ACB255B38FCD8AA5AEB9F1030": "9.0.28.0", "8355DCF076564B6784C517FD0ECCB2F20": "9.0.124.0", "6761F4FA49B5F55833D66CAC0BBF8CB80": "9.0.246.0", "860692A215F054B7B9474B410ABEB5300": "10.0.22.87", "C5B5651B46B7612E118339D19A6E66360": "9.0.45.0", "B19EE2363941C9582E040B99BB5E237A0": "10.0.32.18", "38AEB67F6A0B43C6A341D7936603E84A0": "10.0.12.36", "B482D3DFD57C23B5754966F42D4CBCB60": "9.0.262.0", "EBD27FDBA9D9B3880550B2446902EC4A0": "10.0.45.2", "4EDBBD7016E8871A461CCABB7F1B16120": "10.1", "0CFAF1611A3C4AA382D26424D609F00B0": "9.0.47.0", "1C8715E734B31A2EACE3B0CFC1CF21EB0": "9.0.159.0", "890664D4EF567481ACFD2A21E9D2A2420": "9.0.151.0", "266780DB53C4AAC830AFF69306C5C0300": "10.0.42.34", "C6CDEFCDB58EFE5C6ECEF0C463C979F80": "10.1.51.66", "27CC04C9588E482A948FB5A87E22687B0": "9.0.159.0", "83CF4DC03621B778E931FC713889E8F10": "9.0.16.0", "51C00B72112812428EFA8F4A37F683A80": "9.0.124.0", "9FA57B6DC7FF4CFE9A518442325E91CB0": "9.0.115.0", "C4D637F2C8494896FBD4B3EF0319EBAC0": "10.0.42.34", "025105C956638D665850591768FB743D0": "10.0.32.18", "AE71D92D2812430FA05238C52F7E20310": "9.0.246.0", "0F3262B5501A34B963E5DF3F0386C9910": "9.0.47.0", "776944FD51654CA2B59AB26A33D8F9B30": "10.0.12.36"}'

    # name: minidump_stackwalk_pathname
    # doc: the full pathname of the extern program minidump_stackwalk (quote path with embedded spaces)
    # converter: str
    minidump_stackwalk_pathname='/data/socorro/stackwalk/bin/minidump_stackwalk'

    # name: processor_class
    # doc: the class that transforms raw crashes into processed crashes
    # converter: configman.converters.class_converter
    processor_class='socorro.processor.legacy_processor.LegacyCrashProcessor'

    # name: processor_symbols_pathname_list
    # doc: comma or space separated list of symbol files for minidump_stackwalk (quote paths with embedded spaces)
    # converter: socorro.processor.legacy_processor.create_symbol_path_str
    processor_symbols_pathname_list='"/mnt/socorro/symbols/symbols_ffx" "/mnt/socorro/symbols/symbols_sea" "/mnt/socorro/symbols/symbols_tbrd" "/mnt/socorro/symbols/symbols_sbrd" "/mnt/socorro/symbols/symbols_os"'

    # name: stackwalk_command_line
    # doc: the template for the command to invoke minidump_stackwalk
    # converter: str
    stackwalk_command_line='$minidump_stackwalk_pathname -m $dumpfilePathname $processor_symbols_pathname_list 2>/dev/null'

    # name: symbol_cache_path
    # doc: the path where the symbol cache is found (quote path with embedded spaces)
    # converter: str
    symbol_cache_path='/mnt/socorro/symbols'

    # name: temporary_file_system_storage_path
    # doc: a local filesystem path where processor can write dumps temporarily for processing
    # converter: str
    temporary_file_system_storage_path='/home/socorro/temp'

    # name: transaction_executor_class
    # doc: a class that will manage transactions
    # converter: configman.converters.class_converter
    transaction_executor_class='socorro.database.transaction_executor.TransactionExecutorWithLimitedBackoff'

    # name: wait_log_interval
    # doc: seconds between log during retries
    # converter: int
    wait_log_interval='30'

    # name: backoff_delays
    # doc: delays in seconds between retries
    # converter: eval
    backoff_delays='10, 30, 60, 120, 120, 120, 120, 120'

    [[c_signature]]

        # name: c_signature_tool_class
        # doc: the class that can generate a C signature
        # converter: configman.converters.class_converter
        c_signature_tool_class='socorro.processor.signature_utilities.CSignatureTool'

        +include processor_c_signature.ini

    [[java_signature]]

        # name: java_signature_tool_class
        # doc: the class that can generate a Java signature
        # converter: configman.converters.class_converter
        java_signature_tool_class='socorro.processor.signature_utilities.JavaSignatureTool'

[producer_consumer]

    # name: producer_consumer_class
    # doc: the class implements a threaded producer consumer queue
    # converter: configman.converters.class_converter
    producer_consumer_class='socorro.lib.threaded_task_manager.ThreadedTaskManager'

    # name: idle_delay
    # doc: the delay in seconds if no job is found
    # converter: int
    idle_delay='7'

    +include processor_threads.ini

[registrar]

    # name: check_in_frequency
    # doc: how often the processor is required to reregister (hh:mm:ss)
    # converter: configman.converters.timedelta_converter
    check_in_frequency='00:00:05'

    # name: database
    # doc: the class of the registrar's database
    # converter: configman.converters.class_converter
    database='socorro.external.postgresql.connection_context.ConnectionContext'

    +include /etc/socorro/processor_postgres.ini

    # name: processor_id
    # doc: the id number for the processor (must already exist) (0 for create new Id, "auto" for autodetection, "host" for same host)
    # converter: str
    processor_id='host'

    # name: registrar_class
    # doc: the class that registers and tracks processors
    # converter: configman.converters.class_converter
    registrar_class='socorro.processor.registration_client.ProcessorAppRegistrationClient'

    # name: transaction_executor_class
    # doc: a class that will manage transactions
    # converter: configman.converters.class_converter
    transaction_executor_class='socorro.database.transaction_executor.TransactionExecutorWithLimitedBackoff'

    # name: wait_log_interval
    # doc: seconds between log during retries
    # converter: int
    wait_log_interval='30'

    # name: backoff_delays
    # doc: delays in seconds between retries
    # converter: eval
    backoff_delays='10, 30, 60, 120, 120, 120, 120, 120'

[source]

    # name: crashstorage_class
    # doc: the source storage class
    # converter: configman.converters.class_converter
    crashstorage_class='socorro.external.postgresql.crashstorage.PostgreSQLCrashStorage'

    # name: database_class
    # doc: the class responsible for connecting toPostgres
    # converter: configman.converters.class_converter
    database_class='socorro.external.postgresql.connection_context.ConnectionContext'

    +include /etc/socorro/processor_postgres.ini

    # name: transaction_executor_class
    # doc: a class that will manage transactions
    # converter: configman.converters.class_converter
    transaction_executor_class='socorro.database.transaction_executor.TransactionExecutorWithLimitedBackoff'

    # name: wait_log_interval
    # doc: seconds between log during retries
    # converter: int
    wait_log_interval='30'

    # name: backoff_delays
    # doc: delays in seconds between retries
    # converter: eval
    backoff_delays='10, 30, 60, 120, 120, 120, 120, 120'

