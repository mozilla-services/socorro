# name: application
# doc: the fully qualified module or class of the application
# converter: configman.converters.class_converter
application='CrashMoverApp'

[destination]

    # name: crashstorage_class
    # doc: the destination storage class
    # converter: configman.converters.class_converter
    crashstorage_class='socorro.external.crashstorage_base.PolyCrashStorage'

    # name: storage_classes
    # doc: a comma delimited list of storage classes
    # converter: configman.converters.class_list_converter
    storage_classes='socorro.external.fs.crashstorage.FSLegacyRadixTreeStorage, socorro.external.postgresql.crashstorage.PostgreSQLCrashStorage, socorro.external.rabbitmq.crashstorage.RabbitMQCrashStorage'

    [[storage0]]

        # name: crashstorage_class
        # doc: None
        # converter: configman.converters.class_converter
        crashstorage_class='socorro.external.postgresql.crashstorage.PostgreSQLCrashStorage'

        # name: database_class
        # doc: the class responsible for connecting toPostgres
        # converter: configman.converters.class_converter
        database_class='socorro.external.postgresql.connection_context.ConnectionContext'

        # name: database_host
        # doc: the hostname of the database
        # converter: str
        database_host='localhost'

        # name: database_name
        # doc: the name of the database
        # converter: str
        database_name='breakpad'

        # name: database_password
        # doc: the user's database password
        # converter: str
        database_password='aPassword'

        # name: database_port
        # doc: the port for the database
        # converter: int
        database_port='5432'

        # name: database_user
        # doc: the name of the user within the database
        # converter: str
        database_user='breakpad_rw'

        # name: transaction_executor_class
        # doc: a class that will manage transactions
        # converter: configman.converters.class_converter
        transaction_executor_class='socorro.database.transaction_executor.TransactionExecutor'

    [[storage1]]

        # name: crashstorage_class
        # doc: None
        # converter: configman.converters.class_converter
        crashstorage_class='socorro.external.fs.crashstorage.FSLegacyRadixTreeStorage'

        # name: date_branch_base
        # doc: the directory base name to use for the dated radix tree storage
        # converter: str
        date_branch_base='date'

        # name: dump_field
        # doc: the default dump field
        # converter: str
        dump_field='upload_file_minidump'

        # name: dump_file_suffix
        # doc: the suffix used to identify a dump file
        # converter: str
        dump_file_suffix='.dump'

        # name: forbidden_keys
        # doc: a comma delimited list of keys to not allowed in the processed crash
        # converter: socorro.external.fs.crashstorage.<lambda>
        forbidden_keys='url, email, user_id, exploitability'

        # name: fs_root
        # doc: a path to a file system
        # converter: socorro.external.fs.crashstorage.<lambda>
        fs_root='/home/selena/repos/socorro/crashes'

        # name: json_file_suffix
        # doc: the suffix used to identify a json file
        # converter: str
        json_file_suffix='.json'

        # name: jsonz_file_suffix
        # doc: the suffix used to identify a gzipped json file
        # converter: str
        jsonz_file_suffix='.jsonz'

        # name: minute_slice_interval
        # doc: how finely to slice minutes into slots, e.g. 4 means every 4 seconds a new slot will be allocated
        # converter: int
        minute_slice_interval='4'

        # name: name_branch_base
        # doc: the directory base name to use for the named radix tree storage
        # converter: str
        name_branch_base='name'

        # name: umask
        # doc: umask to use for new files
        # converter: int
        umask='18'

    [[storage2]]

        # name: backoff_delays
        # doc: delays in seconds between retries
        # converter: eval
        backoff_delays="'''10, 30, 60, 120, 300, 300, 300, 300, 300, 300'''"

        # name: crashstorage_class
        # doc: None
        # converter: configman.converters.class_converter
        crashstorage_class='socorro.external.rabbitmq.crashstorage.RabbitMQCrashStorage'

        # name: host
        # doc: the hostname of the RabbitMQ server
        # converter: str
        host='localhost'

        # name: port
        # doc: the port for the RabbitMQ server
        # converter: int
        port='5672'

        # name: rabbitmq_class
        # doc: the class responsible for connecting toRabbitMQ
        # converter: configman.converters.class_converter
        rabbitmq_class='socorro.external.rabbitmq.connection_context.ConnectionContext'

        # name: rabbitmq_password
        # doc: the user's RabbitMQ password
        # converter: str
        rabbitmq_password='guest'

        # name: rabbitmq_user
        # doc: the name of the user within the RabbitMQ instance
        # converter: str
        rabbitmq_user='guest'

        # name: transaction_executor_class
        # doc: Transaction wrapper class
        # converter: configman.converters.class_converter
        transaction_executor_class='socorro.database.transaction_executor.TransactionExecutorWithInfiniteBackoff'

        # name: virtual_host
        # doc: the name of the RabbitMQ virtual host
        # converter: str
        virtual_host='/'

        # name: wait_log_interval
        # doc: seconds between log during retries
        # converter: int
        wait_log_interval='1'

[logging]

    # name: stderr_error_logging_level
    # doc: logging level for the logging to stderr (10 - DEBUG, 20 - INFO, 30 - WARNING, 40 - ERROR, 50 - CRITICAL)
    # converter: int
    stderr_error_logging_level='10'

    # name: stderr_line_format_string
    # doc: python logging system format for logging to stderr
    # converter: str
    stderr_line_format_string='{asctime} {levelname} - {threadName} - {message}'

    # name: syslog_error_logging_level
    # doc: logging level for the log file (10 - DEBUG, 20 - INFO, 30 - WARNING, 40 - ERROR, 50 - CRITICAL)
    # converter: int
    syslog_error_logging_level='40'

    # name: syslog_facility_string
    # doc: syslog facility string ("user", "local0", etc)
    # converter: str
    syslog_facility_string='user'

    # name: syslog_host
    # doc: syslog hostname
    # converter: str
    syslog_host='localhost'

    # name: syslog_line_format_string
    # doc: python logging system format for syslog entries
    # converter: str
    syslog_line_format_string='crashmover (pid {process}): {asctime} {levelname} - {threadName} - {message}'

    # name: syslog_port
    # doc: syslog port
    # converter: int
    syslog_port='514'

[producer_consumer]

    # name: idle_delay
    # doc: the delay in seconds if no job is found
    # converter: int
    idle_delay='7'

    # name: maximum_queue_size
    # doc: the maximum size of the internal queue
    # converter: int
    maximum_queue_size='8'

    # name: number_of_threads
    # doc: the number of threads
    # converter: int
    number_of_threads='4'

    # name: producer_consumer_class
    # doc: the class implements a threaded producer consumer queue
    # converter: configman.converters.class_converter
    producer_consumer_class='socorro.lib.threaded_task_manager.ThreadedTaskManager'

[source]

    # name: crashstorage_class
    # doc: the source storage class
    # converter: configman.converters.class_converter
    crashstorage_class='socorro.external.fs.crashstorage.FSLegacyRadixTreeStorage'

    # name: date_branch_base
    # doc: the directory base name to use for the dated radix tree storage
    # converter: str
    date_branch_base='date'

    # name: dump_field
    # doc: the default dump field
    # converter: str
    dump_field='upload_file_minidump'

    # name: dump_file_suffix
    # doc: the suffix used to identify a dump file
    # converter: str
    dump_file_suffix='.dump'

    # name: forbidden_keys
    # doc: a comma delimited list of keys to not allowed in the processed crash
    # converter: socorro.external.fs.crashstorage.<lambda>
    forbidden_keys='url, email, user_id, exploitability'

    # name: fs_root
    # doc: a path to a file system
    # converter: socorro.external.fs.crashstorage.<lambda>
    fs_root='/home/selena/repos/socorro/crashes'

    # name: json_file_suffix
    # doc: the suffix used to identify a json file
    # converter: str
    json_file_suffix='.json'

    # name: jsonz_file_suffix
    # doc: the suffix used to identify a gzipped json file
    # converter: str
    jsonz_file_suffix='.jsonz'

    # name: minute_slice_interval
    # doc: how finely to slice minutes into slots, e.g. 4 means every 4 seconds a new slot will be allocated
    # converter: int
    minute_slice_interval='4'

    # name: name_branch_base
    # doc: the directory base name to use for the named radix tree storage
    # converter: str
    name_branch_base='name'

    # name: umask
    # doc: umask to use for new files
    # converter: int
    umask='18'

