# name: application
# doc: the fully qualified module or class of the application
#application='ProcessorApp'

[destination]

    # name: crashstorage_class
    # doc: the destination storage class
    crashstorage_class='socorro.external.crashstorage_base.PolyCrashStorage'

    # name: storage_classes
    # doc: a comma delimited list of storage classes
    storage_classes='socorro.external.fs.crashstorage.FSLegacyRadixTreeStorage, socorro.external.postgresql.crashstorage.PostgreSQLCrashStorage'

    [[storage0]]

        # name: crashstorage_class
        # doc: the name of the filesystem crash storage class
        crashstorage_class=socorro.external.fs.crashstorage.FSLegacyRadixTreeStorage

        +include ./common_filesystem.ini

    [[storage1]]

        # name: crashstorage_class
        # doc: None
        crashstorage_class='socorro.external.postgresql.crashstorage.PostgreSQLCrashStorage'

        +include ./common_database.ini

[logging]

    # name: stderr_error_logging_level
    # doc: logging level for the logging to stderr (10 - DEBUG, 20 - INFO, 30 - WARNING, 40 - ERROR, 50 - CRITICAL)
    #stderr_error_logging_level=10

    # name: stderr_line_format_string
    # doc: python logging system format for logging to stderr
    #stderr_line_format_string={asctime} {levelname} - {threadName} - {message}

    # name: syslog_error_logging_level
    # doc: logging level for the log file (10 - DEBUG, 20 - INFO, 30 - WARNING, 40 - ERROR, 50 - CRITICAL)
    #syslog_error_logging_level=40

    # name: syslog_facility_string
    # doc: syslog facility string ("user", "local0", etc)
    #syslog_facility_string=user

    # name: syslog_host
    # doc: syslog hostname
    #syslog_host=localhost

    # name: syslog_line_format_string
    # doc: python logging system format for syslog entries
    #syslog_line_format_string=collector (pid {process}): {asctime} {levelname} - {threadName} - {message}

    # name: syslog_port
    # doc: syslog port
    #syslog_port=514

[new_crash_source]

    # name: crashstorage_class
    # doc: the name of the rabbitmq class
    crashstorage_class=socorro.external.rabbitmq.crashstorage.RabbitMQCrashStorage

    +include ./common_rabbitmq.ini

    # name: new_crash_source_class
    # doc: an iterable that will stream crash_ids needing processing
    new_crash_source_class='socorro.external.rabbitmq.rmq_new_crash_source.RMQNewCrashSource'

[processor]

    +include ./common_database.ini

    # name: collect_addon
    # doc: boolean indictating if information about add-ons should be collected
    #collect_addon='True'

    # name: collect_crash_process
    # doc: boolean indictating if information about process type should be collected
    #collect_crash_process='True'

    # name: known_flash_identifiers
    # doc: A subset of the known "debug identifiers" for flash versions, associated to the version
    #known_flash_identifiers={}

    # name: minidump_stackwalk_pathname
    # doc: the full pathname of the extern program minidump_stackwalk (quote path with embedded spaces)
    # converter: str
    #minidump_stackwalk_pathname=./stackwalk/bin/stackwalker

    # name: processor_class
    # doc: the class that transforms raw crashes into processed crashes
    # converter: configman.converters.class_converter
    # Inspect the automatically written value below to make sure it is valid
    #   as a Python object for its intended converter function.
    processor_class='socorro.processor.hybrid_processor.HybridCrashProcessor'

    # name: processor_symbols_pathname_list
    # doc: comma or space separated list of symbol files for minidump_stackwalk (quote paths with embedded spaces)
    #processor_symbols_pathname_list="/mnt/socorro/symbols/symbols_ffx" "/mnt/socorro/symbols/symbols_sea" "/mnt/socorro/symbols/symbols_tbrd" "/mnt/socorro/symbols/symbols_sbrd" "/mnt/socorro/symbols/symbols_os"

    # name: stackwalk_command_line
    # doc: the template for the command to invoke minidump_stackwalk
    # converter: str
    #stackwalk_command_line=$minidump_stackwalk_pathname --pipe $dumpfilePathname $processor_symbols_pathname_list 2>/dev/null

    # name: symbol_cache_path
    # doc: the path where the symbol cache is found (quote path with embedded spaces)
    # converter: str
    #symbol_cache_path=/mnt/socorro/symbols

    [[c_signature]]

        # name: c_signature_tool_class
        # doc: the class that can generate a C signature
        #c_signature_tool_class='socorro.processor.signature_utilities.CSignatureTool'

        # name: irrelevant_signature_re
        # doc: a regular expression matching frame signatures that should be ignored when generating an overall signature
        irrelevant_signature_re='""'

        # name: prefix_signature_re
        # doc: a regular expression matching frame signatures that should always be coupled with the following frame signature when generating an overall signature
        prefix_signature_re='""'

        # name: signature_sentinels
        # doc: a list of frame signatures that should always be considered top of the stack if present in the stack
        signature_sentinels=[]

        # name: signatures_with_line_numbers_re
        # doc: any signatures that match this list should be combined with their associated source code line numbers
        signatures_with_line_numbers_re=''

    [[java_signature]]

        # name: java_signature_tool_class
        # doc: the class that can generate a Java signature
        #java_signature_tool_class='socorro.processor.signature_utilities.JavaSignatureTool'

    [[statistics]]

        # name: active_counters_list
        # doc: a comma delimeted list of counters
        #active_counters_list=''

        # name: prefix
        # doc: a string to be used as the prefix for statsd names
        #prefix=''

        # name: stats_class
        # doc: name of a class that will gather statistics
        #stats_class='socorro.lib.statistics.StatisticsForStatsd'

        # name: statsd_host
        # doc: the hostname of statsd
        #statsd_host=

        # name: statsd_port
        # doc: the port number for statsd
        #statsd_port=8125

[producer_consumer]

    # name: idle_delay
    # doc: the delay in seconds if no job is found
    #idle_delay=7

    # name: maximum_queue_size
    # doc: the maximum size of the internal queue
    #maximum_queue_size=8

    # name: number_of_threads
    # doc: the number of threads
    #number_of_threads=4

    # name: producer_consumer_class
    # doc: the class implements a threaded producer consumer queue
    producer_consumer_class='socorro.lib.threaded_task_manager.ThreadedTaskManager'

[registrar]

    # name: registrar_class
    # doc: the class that registers and tracks processors
    registrar_class='socorro.processor.registration_client.ProcessorAppNullRegistrationClient'

[source]

    # name: crashstorage_class
    # doc: the name of the filesystem crashstorage class
    crashstorage_class=socorro.external.fs.crashstorage.FSLegacyRadixTreeStorage

    +include ./common_filesystem.ini
