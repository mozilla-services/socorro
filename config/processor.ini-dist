# name: application
# doc: the fully qualified module or class of the application
# converter: configman.converters.class_converter
application='ProcessorApp'

[destination]

    # name: crashstorage_class
    # doc: the destination storage class
    # converter: configman.converters.class_converter
    #crashstorage_class='socorro.external.crashstorage_base.PolyCrashStorage'

    # name: storage_classes
    # doc: a comma delimited list of storage classes
    # converter: configman.converters.class_list_converter
    #storage_classes='socorro.external.postgresql.crashstorage.PostgreSQLCrashStorage, socorro.external.filesystem.crashstorage.FileSystemCrashStorage'

    [[storage0]]

        # name: crashstorage_class
        # doc: None
        # converter: configman.converters.class_converter
        crashstorage_class='socorro.external.filesystem.crashstorage.FileSystemCrashStorage'

        # name: std_fs_root
        # doc: a path to a local file system
        # converter: str
        # OPS - set once
        std_fs_root='/home/socorro/primaryCrashStore'

        # name: def_fs_root
        # doc: a path to a local file system
        # converter: str
        # OPS - set once
        def_fs_root='/home/socorro/deferredCrashStore'

        # name: pro_fs_root
        # doc: a path to a local file system for processed storage
        # converter: str
        # OPS - set once
        pro_fs_root='/home/socorro/processedCrashStore'

        # name: date_name
        # doc: the relative path to the top of the date storage tree from root parameter
        # converter: str
        date_name='date'

        # name: dir_permissions
        # doc: a number used for permissions for directories in the local file system
        # converter: int
        # OPS - set once
        dir_permissions='504'

        # name: dump_dir_count
        # doc: the number of dumps to be stored in a single directory in the local file system
        # converter: int
        dump_dir_count='1024'

        # name: dump_file_suffix
        # doc: the suffix used to identify a dump file
        # converter: str
        dump_file_suffix='.dump'

        # name: dump_gid
        # doc: the group ID for saved crashes in local file system (optional)
        # converter: str
        # OPS - set once
        dump_gid=''

        # name: dump_permissions
        # doc: a number used for permissions crash dump files in the local file system
        # converter: int
        # OPS - set once
        dump_permissions='432'

        # name: forbidden_keys
        # doc: a comma delimited list of keys to not allowed in the processed crash
        # converter: socorro.external.filesystem.crashstorage.<lambda>
        forbidden_keys='url, email, user_id'

        # name: gzip_compression_level
        # doc: the level of compression to use
        # converter: int
        gzip_compression_level='9'

        # name: index_name
        # doc: the relative path to the top of the name storage tree from root parameter
        # converter: str
        index_name='name'

        # name: json_file_suffix
        # doc: the suffix used to identify a json file
        # converter: str
        json_file_suffix='.json'

        # name: minutes_per_slot
        # doc: the number of minutes in the lowest date directory
        # converter: int
        minutes_per_slot='1'

        # name: processed_crash_file_suffix
        # doc: the processed crash filename suffix
        # converter: str
        processed_crash_file_suffix='.jsonz'

        # name: storage_depth
        # doc: the length of branches in the radix storage tree
        # converter: int
        storage_depth='2'

        # name: sub_slot_count
        # doc: distribute data evenly among this many sub timeslots
        # converter: int
        sub_slot_count='1'

    [[storage1]]

        # if you'd like to have one common database configuration for the
        # all or a subset of the apps, uncomment the +include line below
        # and edit the 'common_database.ini' file instead of using the individual
        # values below.
        #+include common_database.ini

        # alternatively, you might choose to have all the sections of the
        # processor use the same configuration, but still be different from
        # other apps.  In that case, uncomment the +include line and edit
        # the indicated file.
        #+include processor_database.ini

        # name: database_host
        # doc: the hostname of the database
        # converter: str
        # OPS - set once
        #database_host='localhost'

        # name: database_name
        # doc: the name of the database
        # converter: str
        # OPS - set once
        #database_name='breakpad'

        # name: database_password
        # doc: the user's database password
        # converter: str
        # OPS - set once
        #database_password='aPassword'

        # name: database_port
        # doc: the port for the database
        # converter: int
        # OPS - set once
        #database_port='5432'

        # name: database_user
        # doc: the name of the user within the database
        # converter: str
        # OPS - set once
        #database_user='breakpad_rw'

        # name: database_class
        # doc: None
        # converter: configman.converters.class_converter
        #database_class='socorro.external.postgresql.connection_context.ConnectionContext'

        # name: backoff_delays
        # doc: delays in seconds between retries
        # converter: eval
        # OPS - set once
        #backoff_delays="10, 30, 60, 120, 300"

        # name: wait_log_interval
        # doc: seconds between log during retries
        # converter: int
        # OPS - set once
        #wait_log_interval='1'

        # name: transaction_executor_class
        # doc: a class that will execute transactions
        # converter: configman.converters.class_converter
        #transaction_executor_class='socorro.database.transaction_executor.TransactionExecutorWithLimitedBackoff'

        # name: crashstorage_class
        # doc: None
        # converter: configman.converters.class_converter
        #crashstorage_class='socorro.external.postgresql.crashstorage.PostgreSQLCrashStorage'


[logging]

    # if you'd like to have one common logging configuration for the
    # all or a subset of the apps, uncomment the +include line below
    # and edit the 'common_logging.ini' file instead of using the individual
    # values below.
    #+include common_logging.ini

    # name: stderr_error_logging_level
    # doc: logging level for the logging to stderr (10 - DEBUG, 20 - INFO, 30 - WARNING, 40 - ERROR, 50 - CRITICAL)
    # converter: int
    # OPS - volatile
    #stderr_error_logging_level='10'

    # name: syslog_error_logging_level
    # doc: logging level for the log file (10 - DEBUG, 20 - INFO, 30 - WARNING, 40 - ERROR, 50 - CRITICAL)
    # converter: int
    # OPS - volatile
    #syslog_error_logging_level='40'

    # name: stderr_line_format_string
    # doc: python logging system format for logging to stderr
    # converter: str
    #stderr_line_format_string='{asctime} {levelname} - {threadName} - {message}'

    # name: syslog_facility_string
    # doc: syslog facility string ("user", "local0", etc)
    # converter: str
    # OPS - set once
    #syslog_facility_string='user'

    # name: syslog_host
    # doc: syslog hostname
    # converter: str
    # OPS - set once
    #syslog_host='localhost'

    # name: syslog_line_format_string
    # doc: python logging system format for syslog entries
    # converter: str
    #syslog_line_format_string='crontabber (pid {process}): {asctime} {levelname} - {threadName} - {message}'

    # name: syslog_port
    # doc: syslog port
    # converter: int
    # OPS - set once
    #syslog_port='514'

[new_crash_source]

    # name: batchJobLimit
    # doc: the number of jobs to pull in a time
    # converter: int
    #batchJobLimit='10000'

    # name: new_crash_source_class
    # doc: an iterable that will stream crash_ids needing processing
    # converter: configman.converters.class_converter
    #new_crash_source_class='socorro.processor.legacy_new_crash_source.LegacyNewCrashSource'

    # if you'd like to have one common database configuration for the
    # all or a subset of the apps, uncomment the +include line below
    # and edit the 'common_database.ini' file instead of using the individual
    # values below.
    #+include common_database.ini

    # alternatively, you might choose to have all the sections of the
    # processor use the same configuration, but still be different from
    # other apps.  In that case, uncomment the +include line and edit
    # the indicated file.
    #+include processor_database.ini

    # name: database_host
    # doc: the hostname of the database
    # converter: str
    # OPS - set once
    #database_host='localhost'

    # name: database_name
    # doc: the name of the database
    # converter: str
    # OPS - set once
    #database_name='breakpad'

    # name: database_password
    # doc: the user's database password
    # converter: str
    # OPS - set once
    #database_password='aPassword'

    # name: database_port
    # doc: the port for the database
    # converter: int
    #database_port='5432'

    # name: database_user
    # doc: the name of the user within the database
    # converter: str
    # OPS - set once
    #database_user='breakpad_rw'

    # name: database_class
    # doc: None
    # converter: configman.converters.class_converter
    #database_class='socorro.external.postgresql.connection_context.ConnectionContext'

    # name: backoff_delays
    # doc: delays in seconds between retries
    # converter: eval
    # OPS - volatile
    #backoff_delays="10, 30, 60, 120, 300"

    # name: wait_log_interval
    # doc: seconds between log during retries
    # converter: int
    # OPS - set once
    #wait_log_interval='1'

    # name: transaction_executor_class
    # doc: a class that will execute transactions
    # converter: configman.converters.class_converter
    #transaction_executor_class='socorro.database.transaction_executor.TransactionExecutorWithLimitedBackoff'

[processor]

    # name: collect_addon
    # doc: boolean indictating if information about add-ons should be collected
    # converter: configman.converters.boolean_converter
    # OPS - set once
    #collect_addon='True'

    # name: collect_crash_process
    # doc: boolean indictating if information about process type should be collected
    # converter: configman.converters.boolean_converter
    # OPS - set once
    #collect_crash_process='True'

    # name: crashing_thread_frame_threshold
    # doc: the number of frames to keep in the raw dump for the crashing thread
    # converter: int
    # OPS - set once
    #crashing_thread_frame_threshold='100'

    # name: crashing_thread_tail_frame_threshold
    # doc: the number of frames to keep in the raw dump at the tail of the frame list
    # converter: int
    # OPS - set once
    #crashing_thread_tail_frame_threshold='10'

    # name: known_flash_identifiers
    # doc: A subset of the known "debug identifiers" for flash versions, associated to the version
    # converter: json.loads
    # OPS - volatile
    #known_flash_identifiers='{"937DDCC422411E58EF6AD13710B0EF190": "10.0.23", "7224164B5918E29AF52365AF3EAF7A500": "10.1.51.66", "03D99C42D7475B46D77E64D4D5386D6D0": "9.0.115.0", "0B03252A5C303973E320CAA6127441F80": "9.0.260.0", "77CB5AC61C456B965D0B41361B3F6CEA0": "10.0.22.87", "986682965B43DFA62E0A0DFFD7B7417F0": "10.0.23", "D1AAAB5D417861E6A5B835B01D3039550": "10.0.45.2", "974873A0A6AD482F8F17A7C55F0A33390": "9.0.262.0", "F43004FFC4944F26AF228334F2CDA80B0": "9.0.151.0", "BF6B3B51ACB255B38FCD8AA5AEB9F1030": "9.0.28.0", "8355DCF076564B6784C517FD0ECCB2F20": "9.0.124.0", "6761F4FA49B5F55833D66CAC0BBF8CB80": "9.0.246.0", "860692A215F054B7B9474B410ABEB5300": "10.0.22.87", "C5B5651B46B7612E118339D19A6E66360": "9.0.45.0", "B19EE2363941C9582E040B99BB5E237A0": "10.0.32.18", "38AEB67F6A0B43C6A341D7936603E84A0": "10.0.12.36", "B482D3DFD57C23B5754966F42D4CBCB60": "9.0.262.0", "EBD27FDBA9D9B3880550B2446902EC4A0": "10.0.45.2", "4EDBBD7016E8871A461CCABB7F1B16120": "10.1", "0CFAF1611A3C4AA382D26424D609F00B0": "9.0.47.0", "890664D4EF567481ACFD2A21E9D2A2420": "9.0.151.0", "1C8715E734B31A2EACE3B0CFC1CF21EB0": "9.0.159.0", "266780DB53C4AAC830AFF69306C5C0300": "10.0.42.34", "C6CDEFCDB58EFE5C6ECEF0C463C979F80": "10.1.51.66", "27CC04C9588E482A948FB5A87E22687B0": "9.0.159.0", "83CF4DC03621B778E931FC713889E8F10": "9.0.16.0", "51C00B72112812428EFA8F4A37F683A80": "9.0.124.0", "9FA57B6DC7FF4CFE9A518442325E91CB0": "9.0.115.0", "C4D637F2C8494896FBD4B3EF0319EBAC0": "10.0.42.34", "025105C956638D665850591768FB743D0": "10.0.32.18", "AE71D92D2812430FA05238C52F7E20310": "9.0.246.0", "0F3262B5501A34B963E5DF3F0386C9910": "9.0.47.0", "776944FD51654CA2B59AB26A33D8F9B30": "10.0.12.36"}'

    # name: minidump_stackwalk_pathname
    # doc: the full pathname of the extern program minidump_stackwalk (quote path with embedded spaces)
    # converter: str
    # OPS - set once
    #minidump_stackwalk_pathname='/data/socorro/stackwalk/bin/minidump_stackwalk'

    # name: processor_class
    # doc: the class that transforms raw crashes into processed crashes
    # converter: configman.converters.class_converter
    #processor_class='socorro.processor.legacy_processor.LegacyCrashProcessor'

    # name: processor_symbols_pathname_list
    # doc: comma or space separated list of symbol files for minidump_stackwalk (quote paths with embedded spaces)
    # converter: socorro.processor.legacy_processor.create_symbol_path_str
    # OPS - volatile
    #processor_symbols_pathname_list='""/mnt/socorro/symbols/symbols_ffx"" ""/mnt/socorro/symbols/symbols_sea"" ""/mnt/socorro/symbols/symbols_tbrd"" ""/mnt/socorro/symbols/symbols_sbrd"" ""/mnt/socorro/symbols/symbols_os""'

    # name: stackwalk_command_line
    # doc: the template for the command to invoke minidump_stackwalk
    # converter: str
    #stackwalk_command_line='$minidump_stackwalk_pathname -m $dumpfilePathname $processor_symbols_pathname_list 2>/dev/null'

    # name: symbol_cache_path
    # doc: the path where the symbol cache is found (quote path with embedded spaces)
    # converter: str
    # OPS - set once
    #symbol_cache_path='/mnt/socorro/symbols'

    # name: temporary_file_system_storage_path
    # doc: a local filesystem path where processor can write dumps temporarily for processing
    # converter: str
    # OPS - set once
    # NOTE - a fast or in memory file system would speed this up
    #temporary_file_system_storage_path='/home/socorro/temp'

    # if you'd like to have one common database configuration for the
    # all or a subset of the apps, uncomment the +include line below
    # and edit the 'common_database.ini' file instead of using the individual
    # values below.
    #+include common_database.ini

    # alternatively, you might choose to have all the sections of the
    # processor use the same configuration, but still be different from
    # other apps.  In that case, uncomment the +include line and edit
    # the indicated file.
    #+include processor_database.ini

    # name: database_host
    # doc: the hostname of the database
    # converter: str
    # OPS - set once
    #database_host='localhost'

    # name: database_name
    # doc: the name of the database
    # converter: str
    # OPS - set once
    #database_name='breakpad'

    # name: database_password
    # doc: the user's database password
    # converter: str
    # OPS - set once
    #database_password='aPassword'

    # name: database_port
    # doc: the port for the database
    # converter: int
    # OPS - set once
    #database_port='5432'

    # name: database_user
    # doc: the name of the user within the database
    # converter: str
    # OPS - set once
    #database_user='breakpad_rw'

    # name: database_class
    # doc: None
    # converter: configman.converters.class_converter
    #database_class='socorro.external.postgresql.connection_context.ConnectionContext'

    # name: backoff_delays
    # doc: delays in seconds between retries
    # converter: eval
    # OPS - volatile
    #backoff_delays="10, 30, 60, 120, 300"

    # name: wait_log_interval
    # doc: seconds between log during retries
    # converter: int
    # OPS - set once
    #wait_log_interval='1'

    # name: transaction_executor_class
    # doc: a class that will execute transactions
    # converter: configman.converters.class_converter
    #transaction_executor_class='socorro.database.transaction_executor.TransactionExecutorWithLimitedBackoff'

    [[c_signature]]

        # name: c_signature_tool_class
        # doc: the class that can generate a C signature
        # converter: configman.converters.class_converter
        #c_signature_tool_class='socorro.processor.signature_utilities.CSignatureTool'

        # name: irrelevant_signature_re
        # doc: a regular expression matching frame signatures that should be ignored when generating an overall signature
        # OPS - volatile
        # converter: str
        irrelevant_signature_re='''
            @0x[0-9a-fA-F]{2,}
            |@0x[1-9a-fA-F]
            |ashmem
            |app_process@0x.*
            |core\.odex@0x.*
            |_CxxThrowException
            |dalvik-heap
            |dalvik-jit-code-cache
            |dalvik-LinearAlloc
            |dalvik-mark-stack
            |data@app@org\.mozilla\.fennec-\d\.apk@classes\.dex@0x.*
            |framework\.odex@0x.*
            |google_breakpad::ExceptionHandler::HandleInvalidParameter.*
            |KiFastSystemCallRet
            |libandroid_runtime\.so@0x.*
            |libbinder\.so@0x.*
            |libc\.so@.*
            |libc-2\.5\.so@.*
            |libEGL\.so@.*
            |libdvm\.so\s*@\s*0x.*
            |libgui\.so@0x.*
            |libicudata.so@.*
            |libMali\.so@0x.*
            |libutils\.so@0x.*
            |libz\.so@0x.*
            |linux-gate\.so@0x.*
            |mnt@asec@org\.mozilla\.fennec-\d@pkg\.apk@classes\.dex@0x.*
            |MOZ_Assert
            |MOZ_Crash
            |mozcrt19.dll@0x.*
            |mozilla::ipc::RPCChannel::Call\(IPC::Message\*, IPC::Message\*\)
            |_NSRaiseError
            |(Nt|Zw)WaitForSingleObject(Ex)?
            |(Nt|Zw)WaitForMultipleObjects(Ex)?
            |nvmap@0x.*
            |org\.mozilla\.fennec-\d\.apk@0x.*
            |RaiseException
            |RtlpAdjustHeapLookasideDepth
            |system@framework@*\.jar@classes\.dex@0x.*
            |___TERMINATING_DUE_TO_UNCAUGHT_EXCEPTION___
            |WaitForSingleObjectExImplementation
            |WaitForMultipleObjectsExImplementation
            |RealMsgWaitFor.*'
            |_ZdlPv
            |zero
        '''

        # name: prefix_signature_re
        # doc: a regular expression matching frame signatures that should always be coupled with the following frame signature when generating an overall signature
        # OPS - volatile
        # converter: str
        prefix_signature_re='''
            @0x0
            |.*abort
            |_alloca_probe.*
            |__android_log_assert
            |arena_alloc
            |arena_dalloc
            |arena_dalloc_small
            |arena_malloc
            |arena_malloc_small
            |arena_ralloc
            |arena_run_dalloc
            |arena_run_reg_alloc
            |arena_run_reg_dalloc
            |arena_run_tree_insert
            |BaseGetNamedObjectDirectory
            |.*calloc
            |cert_.*
            |CERT_.*
            |CFRelease
            |_chkstk
            |CrashInJS
            |__delayLoadHelper2
            |dlmalloc
            |dlmalloc_trim
            |dvm.*
            |EtwEventEnabled
            |fastcopy_I
            |fastzero_I
            |_files_getaddrinfo
            |.*free
            |GCGraphBuilder::NoteXPCOMChild
            |getanswer
            |huge_dalloc
            |ialloc
            |init_library
            |isalloc
            |je_malloc
            |je_realloc
            |JNI_CreateJavaVM
            |_JNIEnv.*
            |JNI_GetCreatedJavaVM.*
            |JS_DHashTableEnumerate
            |JS_DHashTableOperate
            |kill
            |__libc_android_abort
            |libobjc.A.dylib@0x1568.
            |(libxul\.so|xul\.dll|XUL)@0x.*
            |LL_.*
            |malloc
            |_MD_.*
            |memcmp
            |__memcmp16
            |memcpy
            |memmove
            |memset
            |mozalloc_abort.*
            |mozalloc_handle_oom
            |moz_free
            |mozilla::AndroidBridge::AutoLocalJNIFrame::~AutoLocalJNIFrame
            |mozilla::ipc::RPCChannel::Call
            |mozilla::ipc::RPCChannel::CxxStackFrame::CxxStackFrame
            |mozilla::ipc::RPCChannel::EnteredCxxStack
            |mozilla::ipc::RPCChannel::Send
            |moz_xmalloc
            |moz_xrealloc
            |nsCOMPtr.*
            |NS_DebugBreak_P.*
            |[-+]\[NSException raise(:format:(arguments:)?)?\]
            |nsObjCExceptionLogAbort(\(.*?\)){0,1}
            |nsRefPtr.*
            |nsTArray<.*
            |nsTArray_base<.*
            |NtUser.*
            |objc_exception_throw
            |objc_msgSend
            |operator new\([^,\)]+\)
            |PL_.*
            |port_.*
            |PORT_.*
            |_PR_.*
            |PR_.*
            |pthread_mutex_lock
            |_purecall
            |raise
            |realloc
            |recv
            |_RTC_Terminate
            |Rtl.*
            |_Rtl.*
            |__Rtl.*
            |SEC_.*Item
            |seckey_.*
            |SECKEY_.*
            |send
            |setjmp
            |sigblock
            |sigprocmask
            |SocketAccept
            |SocketAcceptRead
            |SocketAvailable
            |SocketAvailable64
            |SocketBind
            |SocketClose
            |SocketConnect
            |SocketGetName
            |SocketGetPeerName
            |SocketListen
            |SocketPoll
            |SocketRead
            |SocketRecv
            |SocketSend
            |SocketShutdown
            |SocketSync
            |SocketTransmitFile
            |SocketWrite
            |SocketWritev
            |ssl_.*
            |SSL_.*
            |strcat
            |ssl3_.*
            |strchr
            |strcmp
            |strcpy
            |.*strdup
            |strlen
            |strncpy
            |strzcmp16
            |strstr
            |__swrite
            |TouchBadMemory
            |_VEC_memcpy
            |_VEC_memzero
            |.*WaitFor.*
            |wcslen
            |__wrap_realloc
            |WSARecv.*
            |WSASend.*
            |_ZdaPvRKSt9nothrow_t\"
            |BaseGetNamedObjectDirectory
        '''

        # name: signature_sentinels
        # doc: a list of frame signatures that should always be considered top of the stack if present in the stack
        # converter: eval
        # OPS - volatile
        signature_sentinels='''
[
    '_purecall',
    ('mozilla::ipc::RPCChannel::Call(IPC::Message*, IPC::Message*)',
        lambda stack: any('CreatePairedMinidumps' in signature for signature in stack)),
    'Java_org_mozilla_gecko_GeckoAppShell_reportJavaCrash',
    'google_breakpad::ExceptionHandler::HandleInvalidParameter(wchar_t const*, wchar_t const*, wchar_t const*, unsigned int, unsigned int)'
]'''

        # name: signatures_with_line_numbers_re
        # doc: any signatures that match this list should be combined with their associated source code line numbers
        # OPS - volatile
        # converter: str
        signatures_with_line_numbers_re='js_Interpret'

    [[java_signature]]

        # name: java_signature_tool_class
        # doc: the class that can generate a Java signature
        # converter: configman.converters.class_converter
        #java_signature_tool_class='socorro.processor.signature_utilities.JavaSignatureTool'

[producer_consumer]

    # name: idle_delay
    # doc: the delay in seconds if no job is found
    # converter: int
    # OPS - set once
    #idle_delay='7'

    # name: maximum_queue_size
    # doc: the maximum size of the internal queue
    # converter: int
    # OPS - set once
    #maximum_queue_size='8'

    # name: number_of_threads
    # doc: the number of threads
    # converter: int
    # OPS - set once
    #number_of_threads='4'

    # name: producer_consumer_class
    # doc: the class implements a threaded producer consumer queue
    # converter: configman.converters.class_converter
    #producer_consumer_class='socorro.lib.threaded_task_manager.ThreadedTaskManager'

[registrar]

    # name: check_in_frequency
    # doc: how often the processor is required to reregister (hh:mm:ss)
    # converter: configman.converters.timedelta_converter
    # OPS - set once
    #check_in_frequency='0:0:5:0'

    # name: processor_id
    # doc: the id number for the processor (must already exist) (0 for create new Id, "auto" for autodetection, "host" for same host)
    # converter: str
    # OPS - set once
    #processor_id='host'

    # name: registrar_class
    # doc: the class that registers and tracks processors
    # converter: configman.converters.class_converter
    #registrar_class='socorro.processor.registration_client.ProcessorAppRegistrationClient'

    # if you'd like to have one common database configuration for the
    # all or a subset of the apps, uncomment the +include line below
    # and edit the 'common_database.ini' file instead of using the individual
    # values below.
    #+include common_database.ini

    # alternatively, you might choose to have all the sections of the
    # processor use the same configuration, but still be different from
    # other apps.  In that case, uncomment the +include line and edit
    # the indicated file.
    #+include processor_database.ini

    # name: database_host
    # doc: the hostname of the database
    # converter: str
    # OPS - set once
    #database_host='localhost'

    # name: database_name
    # doc: the name of the database
    # converter: str
    # OPS - set once
    #database_name='breakpad'

    # name: database_password
    # doc: the user's database password
    # converter: str
    # OPS - set once
    #database_password='aPassword'

    # name: database_port
    # doc: the port for the database
    # converter: int
    #database_port='5432'

    # name: database_user
    # doc: the name of the user within the database
    # converter: str
    # OPS - set once
    #database_user='breakpad_rw'

    # name: database_class
    # doc: None
    # converter: configman.converters.class_converter
    #database_class='socorro.external.postgresql.connection_context.ConnectionContext'

    # name: backoff_delays
    # doc: delays in seconds between retries
    # converter: eval
    # OPS - volatile
    #backoff_delays="10, 30, 60, 120, 300"

    # name: wait_log_interval
    # doc: seconds between log during retries
    # converter: int
    # OPS - set once
    #wait_log_interval='1'

    # name: transaction_executor_class
    # doc: a class that will execute transactions
    # converter: configman.converters.class_converter
    #transaction_executor_class='socorro.database.transaction_executor.TransactionExecutorWithLimitedBackoff'

[source]

    # name: crashstorage_class
    # doc: the source storage class
    # converter: configman.converters.class_converter
    #crashstorage_class='socorro.external.postgresql.crashstorage.PostgreSQLCrashStorage'

    # if you'd like to have one common database configuration for the
    # all or a subset of the apps, uncomment the +include line below
    # and edit the 'common_database.ini' file instead of using the individual
    # values below.
    #+include common_database.ini

    # alternatively, you might choose to have all the sections of the
    # processor use the same configuration, but still be different from
    # other apps.  In that case, uncomment the +include line below and edit
    # the indicated file.
    #+include processor_database.ini

    # name: database_host
    # doc: the hostname of the database
    # converter: str
    # OPS - set once
    #database_host='localhost'

    # name: database_name
    # doc: the name of the database
    # converter: str
    # OPS - set once
    #database_name='breakpad'

    # name: database_password
    # doc: the user's database password
    # converter: str
    # OPS - set once
    #database_password='aPassword'

    # name: database_port
    # doc: the port for the database
    # converter: int
    #database_port='5432'

    # name: database_user
    # doc: the name of the user within the database
    # converter: str
    # OPS - set once
    #database_user='breakpad_rw'

    # name: database_class
    # doc: None
    # converter: configman.converters.class_converter
    #database_class='socorro.external.postgresql.connection_context.ConnectionContext'

    # name: backoff_delays
    # doc: delays in seconds between retries
    # converter: eval
    # OPS - set once
    #backoff_delays="10, 30, 60, 120, 300"

    # name: wait_log_interval
    # doc: seconds between log during retries
    # converter: int
    # OPS - set once
    #wait_log_interval='1'

    # name: transaction_executor_class
    # doc: a class that will execute transactions
    # converter: configman.converters.class_converter
    #transaction_executor_class='socorro.database.transaction_executor.TransactionExecutorWithLimitedBackoff'


