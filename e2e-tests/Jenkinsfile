import groovy.json.JsonOutput

/** Desired capabilities */
def capabilities = [
  browserName: 'Firefox',
  version: '47.0',
  platform: 'Windows 10'
]

/** Write capabilities to JSON file
 *
 * @param desiredCapabilities capabilities to include in the file
*/
def writeCapabilities(desiredCapabilities) {
    def defaultCapabilities = [
        build: env.BUILD_TAG,
        public: 'public restricted'
    ]
    def capabilities = defaultCapabilities.clone()
    capabilities.putAll(desiredCapabilities)
    def json = JsonOutput.toJson([capabilities: capabilities])
    writeFile file: 'e2e-tests/capabilities.json', text: json
}

/** Send a notice to #fxtest-alerts on irc.mozilla.org with the build result */
def ircNotification() {
  def nick = "fxtest${BUILD_NUMBER}"
  def channel = '#fx-test-alerts'
  def result = currentBuild.result ?: 'SUCCESS'
  def message = "Project ${JOB_NAME} build #${BUILD_NUMBER}: ${result}: ${BUILD_URL}"
  node {
    sh """
        (
        echo NICK ${nick}
        echo USER ${nick} 8 * : ${nick}
        sleep 5
        echo "JOIN ${channel}"
        echo "NOTICE ${channel} :${message}"
        echo QUIT
        ) | openssl s_client -connect irc.mozilla.org:6697
    """
  }
}

pipeline {
  agent any
  options {
    ansiColor()
    timestamps()
    timeout(time: 1, unit: 'HOURS')
  }
  environment {
    PYTEST_ADDOPTS =
      "-n=10 " +
      "--color=yes " +
      "--driver=SauceLabs " +
      "--variables=capabilities.json"
    SAUCELABS_API_KEY = credentials('SAUCELABS_API_KEY')
  }
  stages {
    stage('Lint') {
      steps {
        sh "tox -c e2e-tests/tox.ini -e flake8"
      }
    }
    stage('Test') {
      steps {
        writeCapabilities(capabilities)
        sh "tox -c e2e-tests/tox.ini -e tests"
      }
      post {
        always {
          junit 'e2e-tests/results/*.xml'
          archiveArtifacts 'e2e-tests/results/*'
          publishHTML(target: [
            allowMissing: false,
            alwaysLinkToLastBuild: true,
            keepAll: true,
            reportDir: 'e2e-tests/results',
            reportFiles: "tests.html",
            reportName: 'HTML Report'])
        }
      }
    }
  }
  post {
    failure {
      mail(
        body: "${BUILD_URL}",
        from: "firefox-test-engineering@mozilla.com",
        replyTo: "firefox-test-engineering@mozilla.com",
        subject: "Build failed in Jenkins: ${JOB_NAME} #${BUILD_NUMBER}",
        to: "fte-ci@mozilla.com")
    }
    changed {
      ircNotification()
    }
  }
}
