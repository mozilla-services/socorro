# Generated by Django 1.11.16 on 2018-11-14 23:26

# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.

from django.db import connection, migrations


def copy_products(apps, schema_editor):
    Product = apps.get_model("crashstats", "Product")
    cursor = connection.cursor()

    # Verify the table is there. If not, we don't need to do anything.
    cursor.execute(
        """
    SELECT relname FROM pg_catalog.pg_class
    WHERE relname = 'products'
    """
    )
    row = cursor.fetchone()
    if row is None:
        print("no products table--nothing to do", end="")
        return

    # Second, pull all the data from it
    columns = ["product_name", "sort"]
    cursor.execute(
        """
        SELECT %(columns)s
        FROM products
        """
        % {"columns": ", ".join(columns)}
    )

    # Third, insert it into the new table
    insert_count = 0
    for row in cursor.fetchall():
        product = dict(zip(columns, row))
        # NOTE(willkg): In the old table, we used sort=-1 to denote inactive
        # products. In the new table, we have a dedicated field.
        Product.objects.create(
            product_name=product["product_name"],
            sort=product["sort"] if product["sort"] != -1 else 100,
            is_active=product["sort"] != -1,
        )
        insert_count += 1
    print("(inserted: %s)" % insert_count, end="")


def delete_products(apps, schema_editor):
    Product = apps.get_model("crashstats", "Product")
    Product.objects.all().delete()


class Migration(migrations.Migration):
    dependencies = [("crashstats", "0009_1506907_product")]

    operations = [migrations.RunPython(copy_products, delete_products)]
