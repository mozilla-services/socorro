#!/bin/bash
# bootstrap && tests && build an artifact
set -e

libexec=$(dirname "$0")

echo "--> bootstrap:"
"$libexec/bootstrap" "$@" || exit 1

echo "--> tests:"
"$libexec/tests" "$@" || exit 1

cd "$libexec"/..

# package socorro.tar.gz for distribution
mkdir builds/

#install
PREFIX=builds/socorro
# record current git revision in install dir
git rev-parse HEAD > $(PREFIX)/application/socorro/external/postgresql/socorro_revision.txt
cp $(PREFIX)/stackwalk/revision.txt $(PREFIX)/application/socorro/external/postgresql/breakpad_revision.txt
# install socorro
# package up the tarball in $(PREFIX)
# create base directories
mkdir -p $(PREFIX)/application
# copy to install directory
rsync -a config $(PREFIX)/application
rsync -a $(VIRTUALENV) $(PREFIX)
rsync -a socorro $(PREFIX)/application
rsync -a scripts $(PREFIX)/application
rsync -a tools $(PREFIX)/application
rsync -a sql $(PREFIX)/application
rsync -a wsgi $(PREFIX)/application
rsync -a stackwalk $(PREFIX)/
rsync -a scripts/stackwalk.sh $(PREFIX)/stackwalk/bin/
rsync -a analysis $(PREFIX)/
rsync -a alembic $(PREFIX)/application
# purge the tests virtualenv
[ -d webapp-django/virtualenv ] || rm -rf webapp-django/virtualenv
rsync -a webapp-django $(PREFIX)/
# copy default config files
cd $(PREFIX)/application/scripts/config;
for file in *.py.dist;
do
 cp $$file `basename $$file .dist`;
done

tar -C builds --mode 755 --exclude-vcs --owner 0 --group 0 -zcf socorro.tar.gz socorro/
echo "FIN"
