# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

import socorro.lib.ConfigurationManager as cm
import datetime

from config.commonconfig import databaseHost
from config.commonconfig import databasePort
from config.commonconfig import databaseName
from config.commonconfig import databaseUserName
from config.commonconfig import databasePassword

#---------------------------------------------------------------------------
# HBase storage system
from config.commonconfig import hbaseStorageClass

from config.commonconfig import hbaseHost
from config.commonconfig import hbasePort
from config.commonconfig import hbaseTimeout

from config.commonconfig import secondaryHbaseHost
from config.commonconfig import secondaryHbasePort
from config.commonconfig import secondaryHbaseTimeout

from config.smtpconfig import smtpHostname
from config.smtpconfig import smtpPort
from config.smtpconfig import smtpUsername
from config.smtpconfig import smtpPassword
from config.smtpconfig import fromEmailAddress
from config.smtpconfig import unsubscribeBaseUrl

wsgiInstallation = cm.Option()
wsgiInstallation.doc = 'True or False, this app is installed under WSGI'
wsgiInstallation.default = True

# Elastic Search configuration
elasticSearchHostname = cm.Option()
elasticSearchHostname.doc = 'String containing the URI of the Elastic Search instance.'
elasticSearchHostname.default = 'localhost'

elasticSearchPort = cm.Option()
elasticSearchPort.doc = 'String containing the port on which calling the Elastic Search instance.'
elasticSearchPort.default = '9200'

#---------------------------------------------------------------------------
# Configuration for middleware services

# Default implementation class for the Middleware services implementations
# If a module doesn't define it's own value, use that one.
# Can be socorro.external.elasticsearch or socorro.external.postgresql
serviceImplementationModule = cm.Option()
serviceImplementationModule.doc = ("String, name of the default module that "
                                   "services use.")
serviceImplementationModule.default = "socorro.external.postgresql"

# Search service config
searchImplementationModule = cm.Option()
searchImplementationModule.doc = ("String, name of the module the search "
                                  "service uses.")
searchImplementationModule.default = 'socorro.external.postgresql'

searchMaxNumberOfDistinctSignatures = cm.Option()
searchMaxNumberOfDistinctSignatures.doc = (
        "Integer containing the maximum allowed number of distinct signatures "
        "the system should retrieve. "
        "Used mainly for performances in ElasticSearch")
searchMaxNumberOfDistinctSignatures.default = 1000

# Util service config
utilImplementationModule = cm.Option()
utilImplementationModule.doc = "String, name of the module util services use."
utilImplementationModule.default = 'socorro.external.postgresql'

# Nightly builds service config
products_buildsImplementationModule = cm.Option()
products_buildsImplementationModule.doc = "String, name of the module util services use."
products_buildsImplementationModule.default = 'socorro.external.postgresql'

# TCBS service config
tcbsImplementationModule = cm.Option()
tcbsImplementationModule.doc = "String, name of the module tcbs services use."
tcbsImplementationModule.default = 'socorro.external.postgresql'

# Report service config
reportImplementationModule = cm.Option()
reportImplementationModule.doc = (
                        "String, name of the module report services use.")
reportImplementationModule.default = 'socorro.external.postgresql'

# Crashes service config
crashesImplementationModule = cm.Option()
crashesImplementationModule.doc = (
                        "String, name of the module crashes services use.")
crashesImplementationModule.default = 'socorro.external.postgresql'

# Crash service config
crashImplementationModule = cm.Option()
crashImplementationModule.doc = (
                        "String, name of the module crash service uses.")
crashImplementationModule.default = 'socorro.external.postgresql'

# Extensions service config
extensionsImplementationModule = cm.Option()
extensionsImplementationModule.doc = (
                        "String, name of the module extensions service uses.")
extensionsImplementationModule.default = 'socorro.external.postgresql'

# Crashes service config
priorityjobsImplementationModule = cm.Option()
priorityjobsImplementationModule.doc = (
                    "String, name of the module priorityjobs service uses.")
priorityjobsImplementationModule.default = 'socorro.external.postgresql'


import socorro.services.signatureHistory as sighist
import socorro.services.aduByDay as adubd
import socorro.services.aduByDayDetails as adudetails
import socorro.services.getCrash as crash
import socorro.services.emailCampaign as emailcampaign
import socorro.services.emailCampaignCreate as emailcreate
import socorro.services.emailCampaigns as emaillist
import socorro.services.emailCampaignVolume as emailvolume
import socorro.services.emailSubscription as emailsub
import socorro.services.emailSender as emailsend
import socorro.services.bugzilla as bugzilla
import socorro.services.currentVersions as cv
import socorro.services.hangReport as hr
import socorro.middleware.report_list_service as report_list
import socorro.middleware.search_service as search
import socorro.middleware.versions_info_service as versions_info
import socorro.middleware.products_builds_service as products_builds
import socorro.middleware.signature_summary_service as signature_summary
import socorro.middleware.signature_urls_service as signature_urls
import socorro.middleware.crash_trends_service as crash_trends
import socorro.middleware.tcbs_service as tcbs
import socorro.middleware.crashes_comments_service as crashes_comments
import socorro.middleware.crash_service as crash_new
import socorro.middleware.extensions_service as extensions
import socorro.middleware.crashes_paireduuid_service as crashes_paireduuid
import socorro.middleware.products_service as products
import socorro.middleware.priorityjobs_service as priorityjobs
import socorro.middleware.crashes_frequency_service as crashes_frequency
import socorro.middleware.job_service as job
import socorro.middleware.bugs_service as bugs
import socorro.middleware.releases_featured_service as releases_featured
import socorro.middleware.server_status_service as server_status

servicesList = cm.Option()
servicesList.doc = 'a python list of classes to offer as services'
servicesList.default = [
    sighist.SignatureHistory,
    adubd.AduByDay,
    adudetails.AduByDayDetails,
    crash.GetCrash,
    emailcampaign.EmailCampaign,
    emailcreate.EmailCampaignCreate,
    emaillist.EmailCampaigns,
    emailvolume.EmailCampaignVolume,
    emailsub.EmailSubscription,
    emailsend.EmailSender,
    bugzilla.Bugzilla,
    cv.CurrentVersions,
    hr.HangReport,
    report_list.ReportList,
    search.Search,
    versions_info.VersionsInfo,
    products_builds.ProductsBuilds,
    signature_summary.SignatureSummary,
    signature_urls.SignatureURLs,
    crash_trends.CrashTrends,
    tcbs.TCBS,
    crashes_comments.CrashesComments,
    crash_new.Crash,
    extensions.Extensions,
    crashes_paireduuid.CrashesPaireduuid,
    products.Products,
    priorityjobs.Priorityjobs,
    crashes_frequency.CrashesFrequency,
    job.Job,
    bugs.Bugs,
    releases_featured.ReleasesFeatured,
    server_status.ServerStatus,
]

crashBaseUrl = cm.Option()
crashBaseUrl.doc = 'The base url for linking to crash-stats. This will be used in email templates'
crashBaseUrl.default = "http://crash-stats/report/index/%s"

#---------------------------------------------------------------------------
# Logging
syslogHost = cm.Option()
syslogHost.doc = 'syslog hostname'
syslogHost.default = 'localhost'

syslogPort = cm.Option()
syslogPort.doc = 'syslog port'
syslogPort.default = 514

syslogFacilityString = cm.Option()
syslogFacilityString.doc = 'syslog facility string ("user", "local0", etc)'
syslogFacilityString.default = 'user'

syslogLineFormatString = cm.Option()
syslogLineFormatString.doc = 'python logging system format for syslog entries'
syslogLineFormatString.default = 'Socorro Web Services (pid %(process)d): %(asctime)s %(levelname)s - %(threadName)s - %(message)s'

syslogErrorLoggingLevel = cm.Option()
syslogErrorLoggingLevel.doc = 'logging level for the log file (10 - DEBUG, 20 - INFO, 30 - WARNING, 40 - ERROR, 50 - CRITICAL)'
syslogErrorLoggingLevel.default = 10

#---------------------------------------------------------------------------
# Platforms
platforms = cm.Option()
platforms.doc = 'Array associating OS ids to full names.'
platforms.default = (
    {
        "id" : "windows",
        "name" : "Windows NT"
    },
    {
        "id" : "mac",
        "name" : "Mac OS X"
    },
    {
        "id" : "linux",
        "name" : "Linux"
    },
)

#---------------------------------------------------------------------------
# Release Channels
channels = cm.Option()
channels.doc = 'List of release channels, excluding the `release` one.'
channels.default = ['Beta', 'Aurora', 'Nightly', 'beta', 'aurora', 'nightly']

restricted_channels = cm.Option()
restricted_channels.doc = 'List of release channels to restrict based on build ids.'
restricted_channels.default = ['Beta', 'beta']
