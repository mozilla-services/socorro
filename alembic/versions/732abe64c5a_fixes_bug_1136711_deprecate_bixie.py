"""Fixes bug 1136711 deprecate bixie

Revision ID: 732abe64c5a
Revises: 1b595e72bb25
Create Date: 2015-02-25 08:26:54.286464

"""

# revision identifiers, used by Alembic.
revision = '732abe64c5a'
down_revision = '1b595e72bb25'

from alembic import op
from socorro.lib import citexttype, jsontype, buildtype
from socorro.lib.migrations import fix_permissions, load_stored_proc

import sqlalchemy as sa
from sqlalchemy import types
from sqlalchemy.dialects import postgresql
from sqlalchemy.sql import table, column

from sqlalchemy.dialects import postgresql
from sqlalchemy.exc import ProgrammingError


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('product_adi', schema='bixie')
    op.drop_table('raw_adi', schema='bixie')
    op.drop_table('product_users', schema='bixie')
    op.drop_table('crashes', schema='bixie')
    op.drop_table('product_version_adi', schema='bixie')
    op.drop_table('users', schema='bixie')
    op.drop_table('hosts', schema='bixie')
    op.drop_table('os_names', schema='bixie')
    op.drop_table('product_versions', schema='bixie')
    op.drop_table('signatures', schema='bixie')
    op.drop_table('crashes_normalized', schema='bixie')
    op.drop_table('user_agents', schema='bixie')
    op.drop_table('error_message_products', schema='bixie')
    op.drop_table('product_release_channels', schema='bixie')
    op.drop_table('release_channels', schema='bixie')
    op.drop_table('error_messages', schema='bixie')
    op.drop_table('raw_product_releases', schema='bixie')
    op.drop_table('full_urls', schema='bixie')
    op.drop_table('products', schema='bixie')
    op.execute('DROP SCHEMA bixie')
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    try:
        op.execute('CREATE SCHEMA IF NOT EXISTS bixie')
    except ProgrammingError, e:
        if re.search(
                'syntax error at or near "NOT"', e.orig.pgerror.strip()):
            op.execute('rollback')
            op.execute('CREATE SCHEMA bixie')

    op.create_table('full_urls',
    sa.Column('id', sa.INTEGER(), sa.Sequence('bixie.full_urls_id_seq'), nullable=False),
    sa.Column('url', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=u'full_urls_pkey'),
    schema='bixie'
    )
    op.create_table('raw_product_releases',
    sa.Column('id', sa.INTEGER(), sa.Sequence('bixie.raw_product_releases_id_seq'), nullable=False),
    sa.Column('version', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('build', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('build_type', citexttype.CitextType(), autoincrement=False, nullable=False),
    sa.Column('platform', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('product_name', citexttype.CitextType, autoincrement=False, nullable=False),
    sa.Column('repository', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('stability', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=u'raw_product_releases_pkey'),
    schema='bixie'
    )
    op.create_table('error_messages',
    sa.Column('id', sa.INTEGER(), sa.Sequence('bixie.error_messages_id_seq'), nullable=False),
    sa.Column('error_message', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=u'error_messages_pkey'),
    schema='bixie'
    )
    op.create_table('error_message_products',
    sa.Column('id', sa.INTEGER(), sa.Sequence('bixie.error_message_products_id_seq'), nullable=False),
    sa.Column('error_message_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['error_message_id'], [u'bixie.error_messages.id'], name=u'error_message_products_error_message_id_fkey'),
    sa.PrimaryKeyConstraint('id', name=u'error_message_products_pkey'),
    schema='bixie'
    )
    op.create_table('user_agents',
    sa.Column('id', sa.INTEGER(), sa.Sequence('bixie.user_agents_id_seq'), nullable=False),
    sa.Column('error_message_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['error_message_id'], [u'bixie.error_messages.id'], name=u'user_agents_error_message_id_fkey'),
    sa.PrimaryKeyConstraint('id', name=u'user_agents_pkey'),
    schema='bixie'
    )
    op.create_table('release_channels',
    sa.Column('id', sa.INTEGER(), sa.Sequence('bixie.release_channels_id_seq'), nullable=False),
    sa.Column('name', citexttype.CitextType, autoincrement=False, nullable=False),
    sa.Column('sort', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=u'release_channels_pkey'),
    schema='bixie'
    )
    op.create_table('product_release_channels',
    sa.Column('id', sa.INTEGER(), sa.Sequence('bixie.product_release_channels_id_seq'), nullable=False),
    sa.Column('release_channel_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['release_channel_id'], [u'bixie.release_channels.id'], name=u'product_release_channels_release_channel_id_fkey'),
    sa.PrimaryKeyConstraint('id', name=u'product_release_channels_pkey'),
    schema='bixie'
    )
    op.create_table('crashes_normalized',
    sa.Column('crash_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('signature_id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('error_message_id', jsontype.JsonType, autoincrement=False, nullable=False),
    sa.Column('product_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('user_agent_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('crash_id', name=u'crashes_normalized_pkey'),
    schema='bixie'
    )
    op.create_table('signatures',
    sa.Column('id', sa.INTEGER(), sa.Sequence('bixie.signatures_id_seq'), nullable=False),
    sa.Column('signature', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=u'signatures_pkey'),
    schema='bixie'
    )
    op.create_table('product_versions',
    sa.Column('id', sa.INTEGER(), sa.Sequence('bixie.product_versions_id_seq'), nullable=False),
    sa.Column('name', citexttype.CitextType, autoincrement=False, nullable=True),
    sa.Column('release_version', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('major_version', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=u'product_versions_pkey'),
    schema='bixie'
    )
    op.create_table('os_names',
    sa.Column('id', sa.INTEGER(), sa.Sequence('bixie.os_names_id_seq'), nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=u'os_names_pkey'),
    schema='bixie'
    )
    op.create_table('hosts',
    sa.Column('id', sa.INTEGER(), sa.Sequence('bixie.hosts_id_seq'), nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=u'hosts_pkey'),
    schema='bixie'
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), sa.Sequence('bixie.users_id_seq'), nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=u'users_pkey'),
    schema='bixie',
    postgresql_ignore_search_path=False
    )
    op.create_table('products',
    sa.Column('id', sa.INTEGER(), sa.Sequence('bixie.products_id_seq'), nullable=False),
    sa.Column('name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=u'products_pkey'),
    schema='bixie',
    postgresql_ignore_search_path=False
    )
    op.create_table('product_version_adi',
    sa.Column('id', sa.INTEGER(), sa.Sequence('bixie.product_version_adi_id_seq'), nullable=False),
    sa.Column('product_version_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('adi_count', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('adi_date', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('os_name', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=u'product_version_adi_pkey'),
    schema='bixie'
    )
    op.create_table('crashes',
    sa.Column('crash_id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('signature', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('error', jsontype.JsonType, autoincrement=False, nullable=False),
    sa.Column('product', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('protocol', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('hostname', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('username', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('port', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('path', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('query', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('full_url', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('user_agent', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('success', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('client_crash_datetime', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('client_submitted_datetime', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('processor_started_datetime', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('processor_completed_datetime', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('crash_id', name=u'crashes_pkey'),
    schema='bixie'
    )
    op.create_table('product_users',
    sa.Column('id', sa.INTEGER(), sa.Sequence('bixie.product_users_id_seq'), nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['product_id'], [u'bixie.products.id'], name=u'product_users_product_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], [u'bixie.users.id'], name=u'product_users_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name=u'product_users_pkey'),
    schema='bixie'
    )
    op.create_table('raw_adi',
    sa.Column('adi_count', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('product_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('product_os_platform', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('product_os_version', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('product_version', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('build', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('build_channel', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('product_guid', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('received_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    schema='bixie'
    )
    op.create_table('product_adi',
    sa.Column('id', sa.INTEGER(), sa.Sequence('bixie.product_adi_id_seq'), nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('adi_count', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('adi_date', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('os_name', citexttype.CitextType, autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=u'product_adi_pkey'),
    schema='bixie'
    )
    ### end Alembic commands ###
