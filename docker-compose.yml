---
version: "2"
services:
  # Socorro app image
  app:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    image: local/socorro_app
    env_file:
      - docker/config/local_dev.env
      - my.env
    depends_on:
      - fakesentry
      - statsd
      - localstack
      - pubsub
      - postgresql
      - elasticsearch
    volumes:
      - .:/app

  # For development

  # For running tests
  test:
    image: local/socorro_app
    env_file:
      - docker/config/local_dev.env
      - docker/config/test.env
    depends_on:
      - fakesentry
      - statsd
      - localstack
      - gcs-emulator
      - pubsub
      - postgresql
      - elasticsearch
    volumes:
      - .:/app

  # For running tests in CI
  test-ci:
    image: local/socorro_app
    env_file:
      - docker/config/local_dev.env
      - docker/config/test.env
    depends_on:
      - fakesentry
      - statsd
      - localstack
      - gcs-emulator
      - pubsub
      - postgresql
      - elasticsearch

  devcontainer:
    build:
      dockerfile: .devcontainer/Dockerfile
      args:
        userid: ${USE_UID:-10001}
        groupid: ${USE_GID:-10001}
    image: local/socorro-devcontainer
    entrypoint: ["sleep", "inf"]
    env_file:
      - docker/config/local_dev.env
      - docker/config/test.env
      - my.env
    depends_on:
      - fakesentry
      - statsd
      - localstack
      - gcs-emulator
      - pubsub
      - postgresql
      - elasticsearch
    volumes:
      - .:/app

  processor:
    image: local/socorro_app
    env_file:
      - docker/config/local_dev.env
      - my.env
    depends_on:
      - fakesentry
      - statsd
      - localstack
      - gcs-emulator
      - pubsub
      - elasticsearch
      - symbolsserver
    command: ["processor"]
    volumes:
      - .:/app

  crontabber:
    image: local/socorro_app
    env_file:
      - docker/config/local_dev.env
      - my.env
    depends_on:
      - fakesentry
      - statsd
      - postgresql
      - elasticsearch
    command: ["crontabber"]
    volumes:
      - .:/app

  webapp:
    image: local/socorro_app
    env_file:
      - docker/config/local_dev.env
      - my.env
    depends_on:
      - fakesentry
      - statsd
      - localstack
      - gcs-emulator
      - pubsub
      - postgresql
      - elasticsearch
      - memcached
      - oidcprovider
    command: ["webapp", "--dev"]
    ports:
      - "8000:8000"
    volumes:
      - .:/app

  # https://github.com/willkg/kent
  fakesentry:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.fakesentry
    image: local/socorro_fakesentry
    ports:
      - "8090:8090"
    command: run --host 0.0.0.0 --port 8090

  # https://hub.docker.com/r/mozilla/oidc-testprovider
  oidcprovider:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.oidcprovider
    image: local/socorro_oidcprovider
    ports:
      - "8080:8080"

  # -----------------------------
  # External services
  # -----------------------------

  # https://hub.docker.com/r/mozilla/socorro_collector/
  #
  # This pulls the latest Antenna and treats it as an external service.
  #
  # This uses the development ./bin/run_web.sh script from the Antenna
  # container since that creates a bucket before running Antenna.
  collector:
    image: mozilla/socorro_collector:latest
    env_file:
      - docker/config/local_dev.env
      - my.env
    depends_on:
      - localstack
      - gcs-emulator
      - pubsub
      - statsd
    expose:
      - 8000
    ports:
      - "8888:8000"
    volumes:
      - .:/socorro

  symbolsserver:
    image: local/socorro_app
    env_file:
      - docker/config/local_dev.env
      - my.env
    command: ["symbolsserver"]
    ports:
      - "8070:8070"
    volumes:
      - .:/app

  # https://hub.docker.com/r/hopsoft/graphite-statsd/
  statsd:
    image: hopsoft/graphite-statsd
    ports:
      - "8081:80"
      - "2003-2004:2003-2004"
      - "2023-2024:2023-2024"
      - "8125:8125/udp"
      - "8126:8126"

  # https://hub.docker.com/_/elasticsearch/
  # Note: This image is deprecated, but the new one requires fiddling.
  elasticsearch:
    image: mozilla/socorro_elasticsearch:1.4.5
    ports:
      - "9200:9200"
      - "9300:9300"

  # https://hub.docker.com/_/postgres/
  postgresql:
    image: postgres:12.7
    ports:
      - "8574:5432"
    environment:
      # Create the superuser account
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=socorro

  # https://hub.docker.com/r/localstack/localstack/
  # localstack running a fake AWS S3 and SQS
  localstack:
    image: localstack/localstack:1.1.0
    environment:
      - SERVICES=s3,sqs
      - DEFAULT_REGION=us-east-1
      - HOSTNAME=localstack
      - HOSTNAME_EXTERNAL=localstack
    ports:
      - "4566:4566"

  # https://cloud.google.com/sdk/docs/downloads-docker
  # official pubsub emulator
  pubsub:
    # also available as google/cloud-sdk:<version>-emulators
    image: gcr.io/google.com/cloudsdktool/google-cloud-cli:463.0.0-emulators
    command:
      - gcloud
      - beta
      - emulators
      - pubsub
      - start
      - --host-port=0.0.0.0:${PUBSUB_PORT:-5010}
    ports:
      - 5010:5010

  # https://hub.docker.com/_/memcached/
  memcached:
    image: memcached:1.5.1
    ports:
      - "11211:11211"

  # https://github.com/fsouza/fake-gcs-server
  # Fake GCP GCS server for local development and testing
  gcs-emulator:
    build:
      dockerfile: ./docker/Dockerfile.gcs-emulator
    image: local/socorro_gcs_emulator
    command: -port 8001 -scheme http
    ports:
      - "${EXPOSE_GCS_EMULATOR_PORT:-8001}:8001"
    healthcheck:
      test: ["CMD", "curl", "-f", "--insecure", "http://localhost:8001/storage/v1/b"]
      interval: 1s
      timeout: 3s
      retries: 5
