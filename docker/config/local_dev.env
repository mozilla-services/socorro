# -------------------------------------------------------------
# Local development environment configuration
# -------------------------------------------------------------

# These configuration variable values are for a local dev environment that
# uses docker compose.
#
# To create configuration for a server environment, you can copy this file,
# READ THROUGH IT CAREFULLY, and then update the values with hosts, usernames,
# passwords, and such specific to the server environment you're setting up.

# debugging and local dev environment things
# ------------------------------------------

# Flag indicating we're running things in the local development environment
LOCAL_DEV_ENV=True

# logging
# -------

# Set logging level to DEBUG for local development
resource.logging.level=DEBUG

# postgres
# --------

resource.postgresql.database_hostname=postgresql
resource.postgresql.database_port=5432
secrets.postgresql.database_username=postgres
secrets.postgresql.database_password=aPassword

# metrics
# -------

resource.metrics.statsd_host=statsd
resource.metrics.markus_backends=markus.backends.logging.LoggingMetrics,markus.backends.statsd.StatsdMetrics

# sentry
# ------

SENTRY_DSN=http://public@fakesentry:8090/1

# elasticsearch
# -------------

resource.elasticsearch.elasticsearch_urls=http://elasticsearch:9200

# boto (s3/sqs)
# -------------

resource.boto.s3_endpoint_url=http://localstack:4566/
resource.boto.access_key=foo
secrets.boto.secret_access_key=foo
resource.boto.bucket_name=dev-bucket
resource.boto.temporary_file_system_storage_path=/tmp
resource.boto.region=us-west-2

resource.boto.sqs_endpoint_url=http://localstack:4566/
resource.boto.standard_queue=local-dev-standard
resource.boto.priority_queue=local-dev-priority
resource.boto.reprocessing_queue=local-dev-reprocessing

# processor
# ---------

# Use the rust-minidump minidump-stackwalk binary
processor.minidump_stackwalker=rust

# In the docker local dev environment, we store symbol cache and other things
# in /tmp because there's only one processor node. For server environments, we
# probably want to store that in a volume. These vars are all affected.
companion_process.symbol_cache_path=/tmp/symbols/cache
processor.minidumpstackwalk.symbol_cache_path=/tmp/symbols/cache
processor.minidumpstackwalk.symbol_tmp_path=/tmp/symbols/tmp

# Drop kill_timeout to 30 because this is a dev environment and 5 minutes is
# a long time
processor.minidumpstackwalk.kill_timeout=30

# Set symbols_urls to two symbol servers so we make sure we can specify multiple
# --symbols-url values in minidump-stackwalk
processor.minidumpstackwalk.symbols_urls=https://symbols.mozilla.org/try,https://symbols.stage.mozaws.net/try

# Set the telemetry bucket name explicitly
destination.telemetry.bucket_name=telemetry-bucket
telemetry.bucket_name=telemetry-bucket

# webapp
# ------

ALLOWED_HOSTS=localhost,webapp
CACHE_LOCATION=memcached:11211
DATABASE_URL=postgres://postgres:aPassword@postgresql:5432/breakpad
SECRET_KEY=secretkey
STATSD_HOST=statsd
OVERVIEW_VERSION_URLS=http://localhost:8000/__version__

# For local dev environment, make the threshold 0 otherwise the webapp doesn't
# show any versions or featured versions
VERSIONS_COUNT_THRESHOLD=0

# Django DEBUG mode which shows settings and tracebacks on errors
DEBUG=True

# Static files are generated as part of the image and reside in
# /app/webapp-django/static/ which is the default location. Thus for server
# environments, you can leave STATIC_ROOT unset.
#
# For local development, the local directory is mounted as /app so the static
# files generated in the image are not available. For local development,
# static files for the webapp get put in /tmp/crashstats-static/ so we
# need to set STATIC_ROOT to that.
STATIC_ROOT=/tmp/crashstats-static/

# For webapp sessions in the local dev environment, we need to allow cookies to
# be sent insecurely since it's using HTTP and not HTTPS.
SESSION_COOKIE_SECURE=False

# fake sentry
# -----------
SENTRY_PORT=8090

# oidcprovider
# ------------
OIDC_RP_CLIENT_ID=1
OIDC_RP_CLIENT_SECRET=bd01adf93cfb
OIDC_OP_AUTHORIZATION_ENDPOINT=http://oidcprovider.127.0.0.1.nip.io:8080/openid/authorize
OIDC_OP_TOKEN_ENDPOINT=http://oidcprovider.127.0.0.1.nip.io:8080/openid/token
OIDC_OP_USER_ENDPOINT=http://oidcprovider.127.0.0.1.nip.io:8080/openid/userinfo

# antenna
# -------
LOCAL_DEV_ENV=True
CRASHSTORAGE_CLASS=antenna.ext.s3.crashstorage.S3CrashStorage
CRASHSTORAGE_ENDPOINT_URL=http://localstack:4566/
CRASHSTORAGE_REGION=us-west-2
CRASHSTORAGE_ACCESS_KEY=foo
CRASHSTORAGE_SECRET_ACCESS_KEY=foo
CRASHSTORAGE_BUCKET_NAME=dev-bucket

CRASHPUBLISH_CLASS=antenna.ext.sqs.crashpublish.SQSCrashPublish
CRASHPUBLISH_ENDPOINT_URL=http://localstack:4566/
CRASHPUBLISH_REGION=us-east-1
CRASHPUBLISH_ACCESS_KEY=foo
CRASHPUBLISH_SECRET_ACCESS_KEY=foo
CRASHPUBLISH_QUEUE_NAME=local-dev-standard
