# name: application
# doc: the fully qualified module or class of the application
# converter: configman.converters.class_converter
application='CronTabber'

[crontabber]

    # name: database_file
    # doc: Location of file where job execution logs are stored
    # converter: str
    database_file='./crontabbers.json'

    # name: jobs
    # doc: None
    # converter: class_list_converter
    jobs='InnerClassList'

    # name: json_database_class
    # doc: Class to load and save the JSON database
    # converter: configman.converters.class_converter
    json_database_class='JSONAndPostgresJobDatabase'

[database]

    # name: backoff_delays
    # doc: delays in seconds between retries
    # converter: eval
    backoff_delays="'''10, 30, 60, 120, 300'''"

    # name: database_class
    # doc: None
    # converter: configman.converters.class_converter
    database_class='socorro.external.postgresql.connection_context.ConnectionContext'

    # name: database_host
    # doc: the hostname of the database
    # converter: str
    database_host='localhost'

    # name: database_name
    # doc: the name of the database
    # converter: str
    database_name='breakpad'

    # name: database_password
    # doc: the user's database password
    # converter: str
    database_password='aPassword'

    # name: database_port
    # doc: the port for the database
    # converter: int
    database_port='5432'

    # name: database_user
    # doc: the name of the user within the database
    # converter: str
    database_user='breakpad_rw'

    # name: transaction_executor_class
    # doc: a class that will execute transactions
    # converter: configman.converters.class_converter
    transaction_executor_class='socorro.database.transaction_executor.TransactionExecutorWithLimitedBackoff'

    # name: wait_log_interval
    # doc: seconds between log during retries
    # converter: int
    wait_log_interval='1'

[logging]

    # name: stderr_error_logging_level
    # doc: logging level for the logging to stderr (10 - DEBUG, 20 - INFO, 30 - WARNING, 40 - ERROR, 50 - CRITICAL)
    # converter: int
    stderr_error_logging_level='10'

    # name: stderr_line_format_string
    # doc: python logging system format for logging to stderr
    # converter: str
    stderr_line_format_string='{asctime} {levelname} - {threadName} - {message}'

    # name: syslog_error_logging_level
    # doc: logging level for the log file (10 - DEBUG, 20 - INFO, 30 - WARNING, 40 - ERROR, 50 - CRITICAL)
    # converter: int
    syslog_error_logging_level='40'

    # name: syslog_facility_string
    # doc: syslog facility string ("user", "local0", etc)
    # converter: str
    syslog_facility_string='user'

    # name: syslog_host
    # doc: syslog hostname
    # converter: str
    syslog_host='localhost'

    # name: syslog_line_format_string
    # doc: python logging system format for syslog entries
    # converter: str
    syslog_line_format_string='crontabber (pid {process}): {asctime} {levelname} - {threadName} - {message}'

    # name: syslog_port
    # doc: syslog port
    # converter: int
    syslog_port='514'

